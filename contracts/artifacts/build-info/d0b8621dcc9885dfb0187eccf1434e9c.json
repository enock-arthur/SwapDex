{
	"id": "d0b8621dcc9885dfb0187eccf1434e9c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/main.sol": {
				"content": "pragma solidity ^0.8.22;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract SwapDEX {\r\n    using SafeMath for uint256;\r\n\r\n    address public owner;\r\n    address public tokenA;\r\n    address public tokenB;\r\n\r\n    uint256 public reserveA;\r\n    uint256 public reserveB;\r\n\r\n    mapping(address => uint256) public balances;\r\n\r\n    uint256 public feePercentage = 0.3 *100; // 0.3% fee\r\n\r\n    event Swap(address indexed sender, uint256 amountADesired, uint256 amountBReceived);\r\n    event AddLiquidity(address indexed provider, uint256 amountA, uint256 amountB);\r\n    event RemoveLiquidity(address indexed provider, uint256 amountA, uint256 amountB);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only owner can call this function\");\r\n        _;\r\n    }\r\n\r\n    constructor(address _tokenA, address _tokenB) {\r\n        owner = msg.sender;\r\n        tokenA = _tokenA;\r\n        tokenB = _tokenB;\r\n    }\r\n\r\n    // Complete implementation of calculateSwapAmount function based on your chosen pricing mechanism (e.g., constant product formula for AMM)\r\n\r\n    function updateReserves(uint256 amountADesired, uint256 amountBOut) internal {\r\n        reserveA = reserveA.add(amountADesired);\r\n        reserveB = reserveB.sub(amountBOut);\r\n    }\r\n\r\n    // ... (other functions)\r\n\r\n    function deposit() external payable {\r\n        balances[msg.sender] += msg.value;\r\n    }\r\n\r\nfunction calculateSwapAmount(uint256 amountADesired) public view returns (uint256) {\r\n    // Calculate the new reserve of token A after adding the amount desired\r\n    uint256 newReserveA = reserveA.add(amountADesired);\r\n    // Calculate the new reserve of token B using the constant product formula\r\n    uint256 newReserveB = reserveA.mul(reserveB).div(newReserveA); // k = x * y\r\n    // Calculate the difference between the old and new reserves of token B\r\n    uint256 amountBOut = reserveB.sub(newReserveB);\r\n    // Return the amount of token B out\r\n    return amountBOut;\r\n}\r\n\r\n    function swapTokens(uint256 amountADesired) external {\r\n        require(amountADesired > 0, \"Invalid amount\");\r\n\r\n        uint256 amountBOut = calculateSwapAmount(amountADesired);\r\n        uint256 amountBWithFee = amountBOut.mul(100).sub(feePercentage);\r\n\r\n        IERC20(tokenA).transferFrom(msg.sender, address(this), amountADesired);\r\n        IERC20(tokenB).transfer(msg.sender, amountBWithFee);\r\n\r\n        updateReserves(amountADesired, amountBOut);\r\n\r\n        emit Swap(msg.sender, amountADesired, amountBWithFee);\r\n    }\r\n\r\n    // ... (other functions)\r\n\r\n    function withdraw(uint256 amount) external onlyOwner {\r\n        require(amount > 0, \"Invalid amount\");\r\n        require(amount <= address(this).balance, \"Insufficient contract balance\");\r\n\r\n        payable(owner).transfer(amount);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220abc7871e4afd975fd78b6d6fd17f0ad1b1822dfd2050c2b628fbe297232a328064736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220abc7871e4afd975fd78b6d6fd17f0ad1b1822dfd2050c2b628fbe297232a328064736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xC7 DUP8 0x1E 0x4A REVERT SWAP8 PUSH0 0xD7 DUP12 PUSH14 0x6FD17F0AD1B1822DFD2050C2B628 0xFB 0xE2 SWAP8 0x23 0x2A ORIGIN DUP1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "482:6210:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220abc7871e4afd975fd78b6d6fd17f0ad1b1822dfd2050c2b628fbe297232a328064736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xC7 DUP8 0x1E 0x4A REVERT SWAP8 PUSH0 0xD7 DUP12 PUSH14 0x6FD17F0AD1B1822DFD2050C2B628 0xFB 0xE2 SWAP8 0x23 0x2A ORIGIN DUP1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "482:6210:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220abc7871e4afd975fd78b6d6fd17f0ad1b1822dfd2050c2b628fbe297232a328064736f6c63430008160033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/main.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/main.sol": {
				"SwapDEX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenB",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"name": "AddLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"name": "RemoveLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountBReceived",
									"type": "uint256"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								}
							],
							"name": "calculateSwapAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feePercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveA",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveB",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								}
							],
							"name": "swapTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenA",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/main.sol\":147:2850  contract SwapDEX {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/main.sol\":436:444  0.3 *100 */\n  0x1e\n    /* \"contracts/main.sol\":405:444  uint256 public feePercentage = 0.3 *100 */\n  0x06\n  sstore\n    /* \"contracts/main.sol\":855:992  constructor(address _tokenA, address _tokenB) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/main.sol\":920:930  msg.sender */\n  caller\n    /* \"contracts/main.sol\":912:917  owner */\n  0x00\n  dup1\n    /* \"contracts/main.sol\":912:930  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/main.sol\":950:957  _tokenA */\n  dup2\n    /* \"contracts/main.sol\":941:947  tokenA */\n  0x01\n  0x00\n    /* \"contracts/main.sol\":941:957  tokenA = _tokenA */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/main.sol\":977:984  _tokenB */\n  dup1\n    /* \"contracts/main.sol\":968:974  tokenB */\n  0x02\n  0x00\n    /* \"contracts/main.sol\":968:984  tokenB = _tokenB */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/main.sol\":855:992  constructor(address _tokenA, address _tokenB) {... */\n  pop\n  pop\n    /* \"contracts/main.sol\":147:2850  contract SwapDEX {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":949:1068   */\ntag_27:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_29\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_30\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_13\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/main.sol\":147:2850  contract SwapDEX {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/main.sol\":147:2850  contract SwapDEX {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa001ecdd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa393bfd6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdc5fa6c5\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xfe784eaa\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_13:\n      dup1\n      0x0fc63d10\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x19e36f3b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5f64b55b\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/main.sol\":233:254  address public tokenA */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/main.sol\":321:344  uint256 public reserveB */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/main.sol\":353:396  mapping(address => uint256) public balances */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/main.sol\":2610:2847  function withdraw(uint256 amount) external onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"contracts/main.sol\":261:282  address public tokenB */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/main.sol\":206:226  address public owner */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/main.sol\":405:444  uint256 public feePercentage = 0.3 *100 */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/main.sol\":1459:2036  function calculateSwapAmount(uint256 amountADesired) public view returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/main.sol\":1367:1455  function deposit() external payable {... */\n    tag_10:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/main.sol\":291:314  uint256 public reserveA */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/main.sol\":2044:2570  function swapTokens(uint256 amountADesired) external {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/main.sol\":233:254  address public tokenA */\n    tag_16:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/main.sol\":321:344  uint256 public reserveB */\n    tag_21:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/main.sol\":353:396  mapping(address => uint256) public balances */\n    tag_28:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/main.sol\":2610:2847  function withdraw(uint256 amount) external onlyOwner {... */\n    tag_34:\n        /* \"contracts/main.sol\":784:789  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/main.sol\":770:789  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/main.sol\":770:780  msg.sender */\n      caller\n        /* \"contracts/main.sol\":770:789  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/main.sol\":762:827  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"contracts/main.sol\":2691:2692  0 */\n      0x00\n        /* \"contracts/main.sol\":2682:2688  amount */\n      dup2\n        /* \"contracts/main.sol\":2682:2692  amount > 0 */\n      gt\n        /* \"contracts/main.sol\":2674:2711  require(amount > 0, \"Invalid amount\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"contracts/main.sol\":2740:2761  address(this).balance */\n      selfbalance\n        /* \"contracts/main.sol\":2730:2736  amount */\n      dup2\n        /* \"contracts/main.sol\":2730:2761  amount <= address(this).balance */\n      gt\n      iszero\n        /* \"contracts/main.sol\":2722:2795  require(amount <= address(this).balance, \"Insufficient contract balance\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"contracts/main.sol\":2816:2821  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/main.sol\":2808:2831  payable(owner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/main.sol\":2808:2839  payable(owner).transfer(amount) */\n      0x08fc\n        /* \"contracts/main.sol\":2832:2838  amount */\n      dup3\n        /* \"contracts/main.sol\":2808:2839  payable(owner).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_74:\n      pop\n        /* \"contracts/main.sol\":2610:2847  function withdraw(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/main.sol\":261:282  address public tokenB */\n    tag_37:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/main.sol\":206:226  address public owner */\n    tag_41:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/main.sol\":405:444  uint256 public feePercentage = 0.3 *100 */\n    tag_45:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/main.sol\":1459:2036  function calculateSwapAmount(uint256 amountADesired) public view returns (uint256) {... */\n    tag_50:\n        /* \"contracts/main.sol\":1533:1540  uint256 */\n      0x00\n        /* \"contracts/main.sol\":1626:1645  uint256 newReserveA */\n      dup1\n        /* \"contracts/main.sol\":1648:1676  reserveA.add(amountADesired) */\n      tag_76\n        /* \"contracts/main.sol\":1661:1675  amountADesired */\n      dup4\n        /* \"contracts/main.sol\":1648:1656  reserveA */\n      sload(0x03)\n        /* \"contracts/main.sol\":1648:1660  reserveA.add */\n      tag_77\n      swap1\n        /* \"contracts/main.sol\":1648:1676  reserveA.add(amountADesired) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_76:\n        /* \"contracts/main.sol\":1626:1676  uint256 newReserveA = reserveA.add(amountADesired) */\n      swap1\n      pop\n        /* \"contracts/main.sol\":1763:1782  uint256 newReserveB */\n      0x00\n        /* \"contracts/main.sol\":1785:1824  reserveA.mul(reserveB).div(newReserveA) */\n      tag_78\n        /* \"contracts/main.sol\":1812:1823  newReserveA */\n      dup3\n        /* \"contracts/main.sol\":1785:1807  reserveA.mul(reserveB) */\n      tag_79\n        /* \"contracts/main.sol\":1798:1806  reserveB */\n      sload(0x04)\n        /* \"contracts/main.sol\":1785:1793  reserveA */\n      sload(0x03)\n        /* \"contracts/main.sol\":1785:1797  reserveA.mul */\n      tag_80\n      swap1\n        /* \"contracts/main.sol\":1785:1807  reserveA.mul(reserveB) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_79:\n        /* \"contracts/main.sol\":1785:1811  reserveA.mul(reserveB).div */\n      tag_81\n      swap1\n        /* \"contracts/main.sol\":1785:1824  reserveA.mul(reserveB).div(newReserveA) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_78:\n        /* \"contracts/main.sol\":1763:1824  uint256 newReserveB = reserveA.mul(reserveB).div(newReserveA) */\n      swap1\n      pop\n        /* \"contracts/main.sol\":1921:1939  uint256 amountBOut */\n      0x00\n        /* \"contracts/main.sol\":1942:1967  reserveB.sub(newReserveB) */\n      tag_82\n        /* \"contracts/main.sol\":1955:1966  newReserveB */\n      dup3\n        /* \"contracts/main.sol\":1942:1950  reserveB */\n      sload(0x04)\n        /* \"contracts/main.sol\":1942:1954  reserveB.sub */\n      tag_83\n      swap1\n        /* \"contracts/main.sol\":1942:1967  reserveB.sub(newReserveB) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_82:\n        /* \"contracts/main.sol\":1921:1967  uint256 amountBOut = reserveB.sub(newReserveB) */\n      swap1\n      pop\n        /* \"contracts/main.sol\":2022:2032  amountBOut */\n      dup1\n        /* \"contracts/main.sol\":2015:2032  return amountBOut */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/main.sol\":1459:2036  function calculateSwapAmount(uint256 amountADesired) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/main.sol\":1367:1455  function deposit() external payable {... */\n    tag_53:\n        /* \"contracts/main.sol\":1438:1447  msg.value */\n      callvalue\n        /* \"contracts/main.sol\":1414:1422  balances */\n      0x05\n        /* \"contracts/main.sol\":1414:1434  balances[msg.sender] */\n      0x00\n        /* \"contracts/main.sol\":1423:1433  msg.sender */\n      caller\n        /* \"contracts/main.sol\":1414:1434  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/main.sol\":1414:1447  balances[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/main.sol\":1367:1455  function deposit() external payable {... */\n      jump\t// out\n        /* \"contracts/main.sol\":291:314  uint256 public reserveA */\n    tag_56:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/main.sol\":2044:2570  function swapTokens(uint256 amountADesired) external {... */\n    tag_61:\n        /* \"contracts/main.sol\":2133:2134  0 */\n      0x00\n        /* \"contracts/main.sol\":2116:2130  amountADesired */\n      dup2\n        /* \"contracts/main.sol\":2116:2134  amountADesired > 0 */\n      gt\n        /* \"contracts/main.sol\":2108:2153  require(amountADesired > 0, \"Invalid amount\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_69\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"contracts/main.sol\":2166:2184  uint256 amountBOut */\n      0x00\n        /* \"contracts/main.sol\":2187:2222  calculateSwapAmount(amountADesired) */\n      tag_90\n        /* \"contracts/main.sol\":2207:2221  amountADesired */\n      dup3\n        /* \"contracts/main.sol\":2187:2206  calculateSwapAmount */\n      tag_50\n        /* \"contracts/main.sol\":2187:2222  calculateSwapAmount(amountADesired) */\n      jump\t// in\n    tag_90:\n        /* \"contracts/main.sol\":2166:2222  uint256 amountBOut = calculateSwapAmount(amountADesired) */\n      swap1\n      pop\n        /* \"contracts/main.sol\":2233:2255  uint256 amountBWithFee */\n      0x00\n        /* \"contracts/main.sol\":2258:2296  amountBOut.mul(100).sub(feePercentage) */\n      tag_91\n        /* \"contracts/main.sol\":2282:2295  feePercentage */\n      sload(0x06)\n        /* \"contracts/main.sol\":2258:2277  amountBOut.mul(100) */\n      tag_92\n        /* \"contracts/main.sol\":2273:2276  100 */\n      0x64\n        /* \"contracts/main.sol\":2258:2268  amountBOut */\n      dup6\n        /* \"contracts/main.sol\":2258:2272  amountBOut.mul */\n      tag_80\n      swap1\n        /* \"contracts/main.sol\":2258:2277  amountBOut.mul(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_92:\n        /* \"contracts/main.sol\":2258:2281  amountBOut.mul(100).sub */\n      tag_83\n      swap1\n        /* \"contracts/main.sol\":2258:2296  amountBOut.mul(100).sub(feePercentage) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_91:\n        /* \"contracts/main.sol\":2233:2296  uint256 amountBWithFee = amountBOut.mul(100).sub(feePercentage) */\n      swap1\n      pop\n        /* \"contracts/main.sol\":2316:2322  tokenA */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/main.sol\":2309:2336  IERC20(tokenA).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/main.sol\":2337:2347  msg.sender */\n      caller\n        /* \"contracts/main.sol\":2357:2361  this */\n      address\n        /* \"contracts/main.sol\":2364:2378  amountADesired */\n      dup7\n        /* \"contracts/main.sol\":2309:2379  IERC20(tokenA).transferFrom(msg.sender, address(this), amountADesired) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      pop\n        /* \"contracts/main.sol\":2397:2403  tokenB */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/main.sol\":2390:2413  IERC20(tokenB).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/main.sol\":2414:2424  msg.sender */\n      caller\n        /* \"contracts/main.sol\":2426:2440  amountBWithFee */\n      dup4\n        /* \"contracts/main.sol\":2390:2441  IERC20(tokenB).transfer(msg.sender, amountBWithFee) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap3\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_103:\n      pop\n        /* \"contracts/main.sol\":2454:2496  updateReserves(amountADesired, amountBOut) */\n      tag_104\n        /* \"contracts/main.sol\":2469:2483  amountADesired */\n      dup4\n        /* \"contracts/main.sol\":2485:2495  amountBOut */\n      dup4\n        /* \"contracts/main.sol\":2454:2468  updateReserves */\n      tag_105\n        /* \"contracts/main.sol\":2454:2496  updateReserves(amountADesired, amountBOut) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/main.sol\":2519:2529  msg.sender */\n      caller\n        /* \"contracts/main.sol\":2514:2562  Swap(msg.sender, amountADesired, amountBWithFee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x77f92a1b6a1a11de8ca49515ad4c1fad45632dd3442167d74b90b304a3c7a758\n        /* \"contracts/main.sol\":2531:2545  amountADesired */\n      dup5\n        /* \"contracts/main.sol\":2547:2561  amountBWithFee */\n      dup4\n        /* \"contracts/main.sol\":2514:2562  Swap(msg.sender, amountADesired, amountBWithFee) */\n      mload(0x40)\n      tag_106\n      swap3\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/main.sol\":2097:2570  {... */\n      pop\n      pop\n        /* \"contracts/main.sol\":2044:2570  function swapTokens(uint256 amountADesired) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_109\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/main.sol\":1146:1327  function updateReserves(uint256 amountADesired, uint256 amountBOut) internal {... */\n    tag_105:\n        /* \"contracts/main.sol\":1245:1273  reserveA.add(amountADesired) */\n      tag_120\n        /* \"contracts/main.sol\":1258:1272  amountADesired */\n      dup3\n        /* \"contracts/main.sol\":1245:1253  reserveA */\n      sload(0x03)\n        /* \"contracts/main.sol\":1245:1257  reserveA.add */\n      tag_77\n      swap1\n        /* \"contracts/main.sol\":1245:1273  reserveA.add(amountADesired) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_120:\n        /* \"contracts/main.sol\":1234:1242  reserveA */\n      0x03\n        /* \"contracts/main.sol\":1234:1273  reserveA = reserveA.add(amountADesired) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/main.sol\":1295:1319  reserveB.sub(amountBOut) */\n      tag_121\n        /* \"contracts/main.sol\":1308:1318  amountBOut */\n      dup2\n        /* \"contracts/main.sol\":1295:1303  reserveB */\n      sload(0x04)\n        /* \"contracts/main.sol\":1295:1307  reserveB.sub */\n      tag_83\n      swap1\n        /* \"contracts/main.sol\":1295:1319  reserveB.sub(amountBOut) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_121:\n        /* \"contracts/main.sol\":1284:1292  reserveB */\n      0x04\n        /* \"contracts/main.sol\":1284:1319  reserveB = reserveB.sub(amountBOut) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/main.sol\":1146:1327  function updateReserves(uint256 amountADesired, uint256 amountBOut) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_122:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_123:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_149\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_122\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_124:\n        /* \"#utility.yul\":328:352   */\n      tag_151\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_123\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_18:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_153\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_124\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:670   */\n    tag_125:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_126:\n        /* \"#utility.yul\":763:787   */\n      tag_156\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_125\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_23:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_158\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_126\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1226   */\n    tag_128:\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1215:1216   */\n      dup1\n        /* \"#utility.yul\":1208:1220   */\n      revert\n        /* \"#utility.yul\":1355:1477   */\n    tag_130:\n        /* \"#utility.yul\":1428:1452   */\n      tag_163\n        /* \"#utility.yul\":1446:1451   */\n      dup2\n        /* \"#utility.yul\":1428:1452   */\n      tag_123\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1421:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1453   */\n      eq\n        /* \"#utility.yul\":1408:1471   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1464:1465   */\n      dup1\n        /* \"#utility.yul\":1457:1469   */\n      revert\n        /* \"#utility.yul\":1408:1471   */\n    tag_164:\n        /* \"#utility.yul\":1355:1477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1483:1622   */\n    tag_131:\n        /* \"#utility.yul\":1529:1534   */\n      0x00\n        /* \"#utility.yul\":1567:1573   */\n      dup2\n        /* \"#utility.yul\":1554:1574   */\n      calldataload\n        /* \"#utility.yul\":1545:1574   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1616   */\n      tag_166\n        /* \"#utility.yul\":1610:1615   */\n      dup2\n        /* \"#utility.yul\":1583:1616   */\n      tag_130\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":1483:1622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1628:1957   */\n    tag_27:\n        /* \"#utility.yul\":1687:1693   */\n      0x00\n        /* \"#utility.yul\":1736:1738   */\n      0x20\n        /* \"#utility.yul\":1724:1733   */\n      dup3\n        /* \"#utility.yul\":1715:1722   */\n      dup5\n        /* \"#utility.yul\":1711:1734   */\n      sub\n        /* \"#utility.yul\":1707:1739   */\n      slt\n        /* \"#utility.yul\":1704:1823   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":1742:1821   */\n      tag_169\n      tag_128\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1704:1823   */\n    tag_168:\n        /* \"#utility.yul\":1862:1863   */\n      0x00\n        /* \"#utility.yul\":1887:1940   */\n      tag_170\n        /* \"#utility.yul\":1932:1939   */\n      dup5\n        /* \"#utility.yul\":1923:1929   */\n      dup3\n        /* \"#utility.yul\":1912:1921   */\n      dup6\n        /* \"#utility.yul\":1908:1930   */\n      add\n        /* \"#utility.yul\":1887:1940   */\n      tag_131\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":1877:1940   */\n      swap2\n      pop\n        /* \"#utility.yul\":1833:1950   */\n      pop\n        /* \"#utility.yul\":1628:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2085   */\n    tag_132:\n        /* \"#utility.yul\":2036:2060   */\n      tag_172\n        /* \"#utility.yul\":2054:2059   */\n      dup2\n        /* \"#utility.yul\":2036:2060   */\n      tag_125\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2029:2034   */\n      dup2\n        /* \"#utility.yul\":2026:2061   */\n      eq\n        /* \"#utility.yul\":2016:2079   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":2075:2076   */\n      0x00\n        /* \"#utility.yul\":2072:2073   */\n      dup1\n        /* \"#utility.yul\":2065:2077   */\n      revert\n        /* \"#utility.yul\":2016:2079   */\n    tag_173:\n        /* \"#utility.yul\":1963:2085   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2230   */\n    tag_133:\n        /* \"#utility.yul\":2137:2142   */\n      0x00\n        /* \"#utility.yul\":2175:2181   */\n      dup2\n        /* \"#utility.yul\":2162:2182   */\n      calldataload\n        /* \"#utility.yul\":2153:2182   */\n      swap1\n      pop\n        /* \"#utility.yul\":2191:2224   */\n      tag_175\n        /* \"#utility.yul\":2218:2223   */\n      dup2\n        /* \"#utility.yul\":2191:2224   */\n      tag_132\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2091:2230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2565   */\n    tag_33:\n        /* \"#utility.yul\":2295:2301   */\n      0x00\n        /* \"#utility.yul\":2344:2346   */\n      0x20\n        /* \"#utility.yul\":2332:2341   */\n      dup3\n        /* \"#utility.yul\":2323:2330   */\n      dup5\n        /* \"#utility.yul\":2319:2342   */\n      sub\n        /* \"#utility.yul\":2315:2347   */\n      slt\n        /* \"#utility.yul\":2312:2431   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":2350:2429   */\n      tag_178\n      tag_128\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2312:2431   */\n    tag_177:\n        /* \"#utility.yul\":2470:2471   */\n      0x00\n        /* \"#utility.yul\":2495:2548   */\n      tag_179\n        /* \"#utility.yul\":2540:2547   */\n      dup5\n        /* \"#utility.yul\":2531:2537   */\n      dup3\n        /* \"#utility.yul\":2520:2529   */\n      dup6\n        /* \"#utility.yul\":2516:2538   */\n      add\n        /* \"#utility.yul\":2495:2548   */\n      tag_133\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2485:2548   */\n      swap2\n      pop\n        /* \"#utility.yul\":2441:2558   */\n      pop\n        /* \"#utility.yul\":2236:2565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2740   */\n    tag_134:\n        /* \"#utility.yul\":2655:2666   */\n      0x00\n        /* \"#utility.yul\":2689:2695   */\n      dup3\n        /* \"#utility.yul\":2684:2687   */\n      dup3\n        /* \"#utility.yul\":2677:2696   */\n      mstore\n        /* \"#utility.yul\":2729:2733   */\n      0x20\n        /* \"#utility.yul\":2724:2727   */\n      dup3\n        /* \"#utility.yul\":2720:2734   */\n      add\n        /* \"#utility.yul\":2705:2734   */\n      swap1\n      pop\n        /* \"#utility.yul\":2571:2740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2746:2966   */\n    tag_135:\n        /* \"#utility.yul\":2886:2920   */\n      0x4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f\n        /* \"#utility.yul\":2882:2883   */\n      0x00\n        /* \"#utility.yul\":2874:2880   */\n      dup3\n        /* \"#utility.yul\":2870:2884   */\n      add\n        /* \"#utility.yul\":2863:2921   */\n      mstore\n        /* \"#utility.yul\":2955:2958   */\n      0x6e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2950:2952   */\n      0x20\n        /* \"#utility.yul\":2942:2948   */\n      dup3\n        /* \"#utility.yul\":2938:2953   */\n      add\n        /* \"#utility.yul\":2931:2959   */\n      mstore\n        /* \"#utility.yul\":2746:2966   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2972:3338   */\n    tag_136:\n        /* \"#utility.yul\":3114:3117   */\n      0x00\n        /* \"#utility.yul\":3135:3202   */\n      tag_183\n        /* \"#utility.yul\":3199:3201   */\n      0x21\n        /* \"#utility.yul\":3194:3197   */\n      dup4\n        /* \"#utility.yul\":3135:3202   */\n      tag_134\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":3128:3202   */\n      swap2\n      pop\n        /* \"#utility.yul\":3211:3304   */\n      tag_184\n        /* \"#utility.yul\":3300:3303   */\n      dup3\n        /* \"#utility.yul\":3211:3304   */\n      tag_135\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":3329:3331   */\n      0x40\n        /* \"#utility.yul\":3324:3327   */\n      dup3\n        /* \"#utility.yul\":3320:3332   */\n      add\n        /* \"#utility.yul\":3313:3332   */\n      swap1\n      pop\n        /* \"#utility.yul\":2972:3338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3344:3763   */\n    tag_65:\n        /* \"#utility.yul\":3510:3514   */\n      0x00\n        /* \"#utility.yul\":3548:3550   */\n      0x20\n        /* \"#utility.yul\":3537:3546   */\n      dup3\n        /* \"#utility.yul\":3533:3551   */\n      add\n        /* \"#utility.yul\":3525:3551   */\n      swap1\n      pop\n        /* \"#utility.yul\":3597:3606   */\n      dup2\n        /* \"#utility.yul\":3591:3595   */\n      dup2\n        /* \"#utility.yul\":3587:3607   */\n      sub\n        /* \"#utility.yul\":3583:3584   */\n      0x00\n        /* \"#utility.yul\":3572:3581   */\n      dup4\n        /* \"#utility.yul\":3568:3585   */\n      add\n        /* \"#utility.yul\":3561:3608   */\n      mstore\n        /* \"#utility.yul\":3625:3756   */\n      tag_186\n        /* \"#utility.yul\":3751:3755   */\n      dup2\n        /* \"#utility.yul\":3625:3756   */\n      tag_136\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":3617:3756   */\n      swap1\n      pop\n        /* \"#utility.yul\":3344:3763   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3769:3933   */\n    tag_137:\n        /* \"#utility.yul\":3909:3925   */\n      0x496e76616c696420616d6f756e74000000000000000000000000000000000000\n        /* \"#utility.yul\":3905:3906   */\n      0x00\n        /* \"#utility.yul\":3897:3903   */\n      dup3\n        /* \"#utility.yul\":3893:3907   */\n      add\n        /* \"#utility.yul\":3886:3926   */\n      mstore\n        /* \"#utility.yul\":3769:3933   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3939:4305   */\n    tag_138:\n        /* \"#utility.yul\":4081:4084   */\n      0x00\n        /* \"#utility.yul\":4102:4169   */\n      tag_189\n        /* \"#utility.yul\":4166:4168   */\n      0x0e\n        /* \"#utility.yul\":4161:4164   */\n      dup4\n        /* \"#utility.yul\":4102:4169   */\n      tag_134\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":4095:4169   */\n      swap2\n      pop\n        /* \"#utility.yul\":4178:4271   */\n      tag_190\n        /* \"#utility.yul\":4267:4270   */\n      dup3\n        /* \"#utility.yul\":4178:4271   */\n      tag_137\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":4296:4298   */\n      0x20\n        /* \"#utility.yul\":4291:4294   */\n      dup3\n        /* \"#utility.yul\":4287:4299   */\n      add\n        /* \"#utility.yul\":4280:4299   */\n      swap1\n      pop\n        /* \"#utility.yul\":3939:4305   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4311:4730   */\n    tag_69:\n        /* \"#utility.yul\":4477:4481   */\n      0x00\n        /* \"#utility.yul\":4515:4517   */\n      0x20\n        /* \"#utility.yul\":4504:4513   */\n      dup3\n        /* \"#utility.yul\":4500:4518   */\n      add\n        /* \"#utility.yul\":4492:4518   */\n      swap1\n      pop\n        /* \"#utility.yul\":4564:4573   */\n      dup2\n        /* \"#utility.yul\":4558:4562   */\n      dup2\n        /* \"#utility.yul\":4554:4574   */\n      sub\n        /* \"#utility.yul\":4550:4551   */\n      0x00\n        /* \"#utility.yul\":4539:4548   */\n      dup4\n        /* \"#utility.yul\":4535:4552   */\n      add\n        /* \"#utility.yul\":4528:4575   */\n      mstore\n        /* \"#utility.yul\":4592:4723   */\n      tag_192\n        /* \"#utility.yul\":4718:4722   */\n      dup2\n        /* \"#utility.yul\":4592:4723   */\n      tag_138\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":4584:4723   */\n      swap1\n      pop\n        /* \"#utility.yul\":4311:4730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4736:4915   */\n    tag_139:\n        /* \"#utility.yul\":4876:4907   */\n      0x496e73756666696369656e7420636f6e74726163742062616c616e6365000000\n        /* \"#utility.yul\":4872:4873   */\n      0x00\n        /* \"#utility.yul\":4864:4870   */\n      dup3\n        /* \"#utility.yul\":4860:4874   */\n      add\n        /* \"#utility.yul\":4853:4908   */\n      mstore\n        /* \"#utility.yul\":4736:4915   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4921:5287   */\n    tag_140:\n        /* \"#utility.yul\":5063:5066   */\n      0x00\n        /* \"#utility.yul\":5084:5151   */\n      tag_195\n        /* \"#utility.yul\":5148:5150   */\n      0x1d\n        /* \"#utility.yul\":5143:5146   */\n      dup4\n        /* \"#utility.yul\":5084:5151   */\n      tag_134\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":5077:5151   */\n      swap2\n      pop\n        /* \"#utility.yul\":5160:5253   */\n      tag_196\n        /* \"#utility.yul\":5249:5252   */\n      dup3\n        /* \"#utility.yul\":5160:5253   */\n      tag_139\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":5278:5280   */\n      0x20\n        /* \"#utility.yul\":5273:5276   */\n      dup3\n        /* \"#utility.yul\":5269:5281   */\n      add\n        /* \"#utility.yul\":5262:5281   */\n      swap1\n      pop\n        /* \"#utility.yul\":4921:5287   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5293:5712   */\n    tag_72:\n        /* \"#utility.yul\":5459:5463   */\n      0x00\n        /* \"#utility.yul\":5497:5499   */\n      0x20\n        /* \"#utility.yul\":5486:5495   */\n      dup3\n        /* \"#utility.yul\":5482:5500   */\n      add\n        /* \"#utility.yul\":5474:5500   */\n      swap1\n      pop\n        /* \"#utility.yul\":5546:5555   */\n      dup2\n        /* \"#utility.yul\":5540:5544   */\n      dup2\n        /* \"#utility.yul\":5536:5556   */\n      sub\n        /* \"#utility.yul\":5532:5533   */\n      0x00\n        /* \"#utility.yul\":5521:5530   */\n      dup4\n        /* \"#utility.yul\":5517:5534   */\n      add\n        /* \"#utility.yul\":5510:5557   */\n      mstore\n        /* \"#utility.yul\":5574:5705   */\n      tag_198\n        /* \"#utility.yul\":5700:5704   */\n      dup2\n        /* \"#utility.yul\":5574:5705   */\n      tag_140\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":5566:5705   */\n      swap1\n      pop\n        /* \"#utility.yul\":5293:5712   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5718:5898   */\n    tag_141:\n        /* \"#utility.yul\":5766:5843   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5763:5764   */\n      0x00\n        /* \"#utility.yul\":5756:5844   */\n      mstore\n        /* \"#utility.yul\":5863:5867   */\n      0x11\n        /* \"#utility.yul\":5860:5861   */\n      0x04\n        /* \"#utility.yul\":5853:5868   */\n      mstore\n        /* \"#utility.yul\":5887:5891   */\n      0x24\n        /* \"#utility.yul\":5884:5885   */\n      0x00\n        /* \"#utility.yul\":5877:5892   */\n      revert\n        /* \"#utility.yul\":5904:6095   */\n    tag_86:\n        /* \"#utility.yul\":5944:5947   */\n      0x00\n        /* \"#utility.yul\":5963:5983   */\n      tag_201\n        /* \"#utility.yul\":5981:5982   */\n      dup3\n        /* \"#utility.yul\":5963:5983   */\n      tag_125\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":5958:5983   */\n      swap2\n      pop\n        /* \"#utility.yul\":5997:6017   */\n      tag_202\n        /* \"#utility.yul\":6015:6016   */\n      dup4\n        /* \"#utility.yul\":5997:6017   */\n      tag_125\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":5992:6017   */\n      swap3\n      pop\n        /* \"#utility.yul\":6040:6041   */\n      dup3\n        /* \"#utility.yul\":6037:6038   */\n      dup3\n        /* \"#utility.yul\":6033:6042   */\n      add\n        /* \"#utility.yul\":6026:6042   */\n      swap1\n      pop\n        /* \"#utility.yul\":6061:6064   */\n      dup1\n        /* \"#utility.yul\":6058:6059   */\n      dup3\n        /* \"#utility.yul\":6055:6065   */\n      gt\n        /* \"#utility.yul\":6052:6088   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":6068:6086   */\n      tag_204\n      tag_141\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":6052:6088   */\n    tag_203:\n        /* \"#utility.yul\":5904:6095   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6101:6543   */\n    tag_94:\n        /* \"#utility.yul\":6250:6254   */\n      0x00\n        /* \"#utility.yul\":6288:6290   */\n      0x60\n        /* \"#utility.yul\":6277:6286   */\n      dup3\n        /* \"#utility.yul\":6273:6291   */\n      add\n        /* \"#utility.yul\":6265:6291   */\n      swap1\n      pop\n        /* \"#utility.yul\":6301:6372   */\n      tag_206\n        /* \"#utility.yul\":6369:6370   */\n      0x00\n        /* \"#utility.yul\":6358:6367   */\n      dup4\n        /* \"#utility.yul\":6354:6371   */\n      add\n        /* \"#utility.yul\":6345:6351   */\n      dup7\n        /* \"#utility.yul\":6301:6372   */\n      tag_124\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":6382:6454   */\n      tag_207\n        /* \"#utility.yul\":6450:6452   */\n      0x20\n        /* \"#utility.yul\":6439:6448   */\n      dup4\n        /* \"#utility.yul\":6435:6453   */\n      add\n        /* \"#utility.yul\":6426:6432   */\n      dup6\n        /* \"#utility.yul\":6382:6454   */\n      tag_124\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":6464:6536   */\n      tag_208\n        /* \"#utility.yul\":6532:6534   */\n      0x40\n        /* \"#utility.yul\":6521:6530   */\n      dup4\n        /* \"#utility.yul\":6517:6535   */\n      add\n        /* \"#utility.yul\":6508:6514   */\n      dup5\n        /* \"#utility.yul\":6464:6536   */\n      tag_126\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":6101:6543   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6549:6639   */\n    tag_142:\n        /* \"#utility.yul\":6583:6590   */\n      0x00\n        /* \"#utility.yul\":6626:6631   */\n      dup2\n        /* \"#utility.yul\":6619:6632   */\n      iszero\n        /* \"#utility.yul\":6612:6633   */\n      iszero\n        /* \"#utility.yul\":6601:6633   */\n      swap1\n      pop\n        /* \"#utility.yul\":6549:6639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6645:6761   */\n    tag_143:\n        /* \"#utility.yul\":6715:6736   */\n      tag_211\n        /* \"#utility.yul\":6730:6735   */\n      dup2\n        /* \"#utility.yul\":6715:6736   */\n      tag_142\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":6708:6713   */\n      dup2\n        /* \"#utility.yul\":6705:6737   */\n      eq\n        /* \"#utility.yul\":6695:6755   */\n      tag_212\n      jumpi\n        /* \"#utility.yul\":6751:6752   */\n      0x00\n        /* \"#utility.yul\":6748:6749   */\n      dup1\n        /* \"#utility.yul\":6741:6753   */\n      revert\n        /* \"#utility.yul\":6695:6755   */\n    tag_212:\n        /* \"#utility.yul\":6645:6761   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6767:6904   */\n    tag_144:\n        /* \"#utility.yul\":6821:6826   */\n      0x00\n        /* \"#utility.yul\":6852:6858   */\n      dup2\n        /* \"#utility.yul\":6846:6859   */\n      mload\n        /* \"#utility.yul\":6837:6859   */\n      swap1\n      pop\n        /* \"#utility.yul\":6868:6898   */\n      tag_214\n        /* \"#utility.yul\":6892:6897   */\n      dup2\n        /* \"#utility.yul\":6868:6898   */\n      tag_143\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":6767:6904   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6910:7255   */\n    tag_98:\n        /* \"#utility.yul\":6977:6983   */\n      0x00\n        /* \"#utility.yul\":7026:7028   */\n      0x20\n        /* \"#utility.yul\":7014:7023   */\n      dup3\n        /* \"#utility.yul\":7005:7012   */\n      dup5\n        /* \"#utility.yul\":7001:7024   */\n      sub\n        /* \"#utility.yul\":6997:7029   */\n      slt\n        /* \"#utility.yul\":6994:7113   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":7032:7111   */\n      tag_217\n      tag_128\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":6994:7113   */\n    tag_216:\n        /* \"#utility.yul\":7152:7153   */\n      0x00\n        /* \"#utility.yul\":7177:7238   */\n      tag_218\n        /* \"#utility.yul\":7230:7237   */\n      dup5\n        /* \"#utility.yul\":7221:7227   */\n      dup3\n        /* \"#utility.yul\":7210:7219   */\n      dup6\n        /* \"#utility.yul\":7206:7228   */\n      add\n        /* \"#utility.yul\":7177:7238   */\n      tag_144\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":7167:7238   */\n      swap2\n      pop\n        /* \"#utility.yul\":7123:7248   */\n      pop\n        /* \"#utility.yul\":6910:7255   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7261:7593   */\n    tag_100:\n        /* \"#utility.yul\":7382:7386   */\n      0x00\n        /* \"#utility.yul\":7420:7422   */\n      0x40\n        /* \"#utility.yul\":7409:7418   */\n      dup3\n        /* \"#utility.yul\":7405:7423   */\n      add\n        /* \"#utility.yul\":7397:7423   */\n      swap1\n      pop\n        /* \"#utility.yul\":7433:7504   */\n      tag_220\n        /* \"#utility.yul\":7501:7502   */\n      0x00\n        /* \"#utility.yul\":7490:7499   */\n      dup4\n        /* \"#utility.yul\":7486:7503   */\n      add\n        /* \"#utility.yul\":7477:7483   */\n      dup6\n        /* \"#utility.yul\":7433:7504   */\n      tag_124\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":7514:7586   */\n      tag_221\n        /* \"#utility.yul\":7582:7584   */\n      0x20\n        /* \"#utility.yul\":7571:7580   */\n      dup4\n        /* \"#utility.yul\":7567:7585   */\n      add\n        /* \"#utility.yul\":7558:7564   */\n      dup5\n        /* \"#utility.yul\":7514:7586   */\n      tag_126\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":7261:7593   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7599:7931   */\n    tag_107:\n        /* \"#utility.yul\":7720:7724   */\n      0x00\n        /* \"#utility.yul\":7758:7760   */\n      0x40\n        /* \"#utility.yul\":7747:7756   */\n      dup3\n        /* \"#utility.yul\":7743:7761   */\n      add\n        /* \"#utility.yul\":7735:7761   */\n      swap1\n      pop\n        /* \"#utility.yul\":7771:7842   */\n      tag_223\n        /* \"#utility.yul\":7839:7840   */\n      0x00\n        /* \"#utility.yul\":7828:7837   */\n      dup4\n        /* \"#utility.yul\":7824:7841   */\n      add\n        /* \"#utility.yul\":7815:7821   */\n      dup6\n        /* \"#utility.yul\":7771:7842   */\n      tag_126\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":7852:7924   */\n      tag_224\n        /* \"#utility.yul\":7920:7922   */\n      0x20\n        /* \"#utility.yul\":7909:7918   */\n      dup4\n        /* \"#utility.yul\":7905:7923   */\n      add\n        /* \"#utility.yul\":7896:7902   */\n      dup5\n        /* \"#utility.yul\":7852:7924   */\n      tag_126\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":7599:7931   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7937:8347   */\n    tag_112:\n        /* \"#utility.yul\":7977:7984   */\n      0x00\n        /* \"#utility.yul\":8000:8020   */\n      tag_226\n        /* \"#utility.yul\":8018:8019   */\n      dup3\n        /* \"#utility.yul\":8000:8020   */\n      tag_125\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":7995:8020   */\n      swap2\n      pop\n        /* \"#utility.yul\":8034:8054   */\n      tag_227\n        /* \"#utility.yul\":8052:8053   */\n      dup4\n        /* \"#utility.yul\":8034:8054   */\n      tag_125\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":8029:8054   */\n      swap3\n      pop\n        /* \"#utility.yul\":8089:8090   */\n      dup3\n        /* \"#utility.yul\":8086:8087   */\n      dup3\n        /* \"#utility.yul\":8082:8091   */\n      mul\n        /* \"#utility.yul\":8111:8141   */\n      tag_228\n        /* \"#utility.yul\":8129:8140   */\n      dup2\n        /* \"#utility.yul\":8111:8141   */\n      tag_125\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":8100:8141   */\n      swap2\n      pop\n        /* \"#utility.yul\":8290:8291   */\n      dup3\n        /* \"#utility.yul\":8281:8288   */\n      dup3\n        /* \"#utility.yul\":8277:8292   */\n      div\n        /* \"#utility.yul\":8274:8275   */\n      dup5\n        /* \"#utility.yul\":8271:8293   */\n      eq\n        /* \"#utility.yul\":8251:8252   */\n      dup4\n        /* \"#utility.yul\":8244:8253   */\n      iszero\n        /* \"#utility.yul\":8224:8307   */\n      or\n        /* \"#utility.yul\":8201:8340   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":8320:8338   */\n      tag_230\n      tag_141\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":8201:8340   */\n    tag_229:\n        /* \"#utility.yul\":7985:8347   */\n      pop\n        /* \"#utility.yul\":7937:8347   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8353:8533   */\n    tag_145:\n        /* \"#utility.yul\":8401:8478   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8398:8399   */\n      0x00\n        /* \"#utility.yul\":8391:8479   */\n      mstore\n        /* \"#utility.yul\":8498:8502   */\n      0x12\n        /* \"#utility.yul\":8495:8496   */\n      0x04\n        /* \"#utility.yul\":8488:8503   */\n      mstore\n        /* \"#utility.yul\":8522:8526   */\n      0x24\n        /* \"#utility.yul\":8519:8520   */\n      0x00\n        /* \"#utility.yul\":8512:8527   */\n      revert\n        /* \"#utility.yul\":8539:8724   */\n    tag_115:\n        /* \"#utility.yul\":8579:8580   */\n      0x00\n        /* \"#utility.yul\":8596:8616   */\n      tag_233\n        /* \"#utility.yul\":8614:8615   */\n      dup3\n        /* \"#utility.yul\":8596:8616   */\n      tag_125\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":8591:8616   */\n      swap2\n      pop\n        /* \"#utility.yul\":8630:8650   */\n      tag_234\n        /* \"#utility.yul\":8648:8649   */\n      dup4\n        /* \"#utility.yul\":8630:8650   */\n      tag_125\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":8625:8650   */\n      swap3\n      pop\n        /* \"#utility.yul\":8669:8670   */\n      dup3\n        /* \"#utility.yul\":8659:8694   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":8674:8692   */\n      tag_236\n      tag_145\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":8659:8694   */\n    tag_235:\n        /* \"#utility.yul\":8716:8717   */\n      dup3\n        /* \"#utility.yul\":8713:8714   */\n      dup3\n        /* \"#utility.yul\":8709:8718   */\n      div\n        /* \"#utility.yul\":8704:8718   */\n      swap1\n      pop\n        /* \"#utility.yul\":8539:8724   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8730:8924   */\n    tag_118:\n        /* \"#utility.yul\":8770:8774   */\n      0x00\n        /* \"#utility.yul\":8790:8810   */\n      tag_238\n        /* \"#utility.yul\":8808:8809   */\n      dup3\n        /* \"#utility.yul\":8790:8810   */\n      tag_125\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":8785:8810   */\n      swap2\n      pop\n        /* \"#utility.yul\":8824:8844   */\n      tag_239\n        /* \"#utility.yul\":8842:8843   */\n      dup4\n        /* \"#utility.yul\":8824:8844   */\n      tag_125\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":8819:8844   */\n      swap3\n      pop\n        /* \"#utility.yul\":8868:8869   */\n      dup3\n        /* \"#utility.yul\":8865:8866   */\n      dup3\n        /* \"#utility.yul\":8861:8870   */\n      sub\n        /* \"#utility.yul\":8853:8870   */\n      swap1\n      pop\n        /* \"#utility.yul\":8892:8893   */\n      dup2\n        /* \"#utility.yul\":8886:8890   */\n      dup2\n        /* \"#utility.yul\":8883:8894   */\n      gt\n        /* \"#utility.yul\":8880:8917   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":8897:8915   */\n      tag_241\n      tag_141\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":8880:8917   */\n    tag_240:\n        /* \"#utility.yul\":8730:8924   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220352415b7fbbdd1b70850d524ef62d1a983e88677176394b5ffdd5b711696efc864736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_472": {
									"entryPoint": null,
									"id": 472,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1355:3",
										"nodeType": "YulBlock",
										"src": "0:1355:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:81:3",
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nativeSrc": "389:65:3",
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:3",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nativeSrc": "400:54:3",
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nativeSrc": "511:51:3",
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nativeSrc": "521:35:3",
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nativeSrc": "532:24:3",
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:3",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:3",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nativeSrc": "611:79:3",
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:3",
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:3",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:3",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nativeSrc": "670:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nativeSrc": "670:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nativeSrc": "641:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nativeSrc": "631:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nativeSrc": "624:43:3",
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nativeSrc": "621:63:3",
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:3",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nativeSrc": "759:80:3",
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nativeSrc": "769:22:3",
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nativeSrc": "778:13:3",
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nativeSrc": "800:33:3",
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nativeSrc": "800:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:3",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:3",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:3",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nativeSrc": "939:413:3",
													"nodeType": "YulBlock",
													"src": "939:413:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:3",
																"nodeType": "YulBlock",
																"src": "985:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:3"
																			},
																			"nativeSrc": "987:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:3"
																		},
																		"nativeSrc": "987:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:3"
																		},
																		"nativeSrc": "956:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:3",
																		"nodeType": "YulLiteral",
																		"src": "981:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:3"
																},
																"nativeSrc": "952:32:3",
																"nodeType": "YulFunctionCall",
																"src": "952:32:3"
															},
															"nativeSrc": "949:119:3",
															"nodeType": "YulIf",
															"src": "949:119:3"
														},
														{
															"nativeSrc": "1078:128:3",
															"nodeType": "YulBlock",
															"src": "1078:128:3",
															"statements": [
																{
																	"nativeSrc": "1093:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:3",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:3"
																				},
																				"nativeSrc": "1164:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:3"
																		},
																		"nativeSrc": "1132:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:3",
															"nodeType": "YulBlock",
															"src": "1216:129:3",
															"statements": [
																{
																	"nativeSrc": "1231:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:3",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:3"
																				},
																				"nativeSrc": "1303:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:3"
																		},
																		"nativeSrc": "1271:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:3",
														"nodeType": "YulTypedName",
														"src": "901:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:3",
														"nodeType": "YulTypedName",
														"src": "912:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:3",
														"nodeType": "YulTypedName",
														"src": "924:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:3",
														"nodeType": "YulTypedName",
														"src": "932:6:3",
														"type": ""
													}
												],
												"src": "845:507:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052601e600655348015610014575f80fd5b50604051610e6c380380610e6c8339818101604052810190610036919061015a565b335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610198565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61012982610100565b9050919050565b6101398161011f565b8114610143575f80fd5b50565b5f8151905061015481610130565b92915050565b5f80604083850312156101705761016f6100fc565b5b5f61017d85828601610146565b925050602061018e85828601610146565b9150509250929050565b610cc7806101a55f395ff3fe60806040526004361061009b575f3560e01c80638da5cb5b116100635780638da5cb5b14610181578063a001ecdd146101ab578063a393bfd6146101d5578063d0e30db014610211578063dc5fa6c51461021b578063fe784eaa146102455761009b565b80630fc63d101461009f57806319e36f3b146100c957806327e235e3146100f35780632e1a7d4d1461012f5780635f64b55b14610157575b5f80fd5b3480156100aa575f80fd5b506100b361026d565b6040516100c09190610817565b60405180910390f35b3480156100d4575f80fd5b506100dd610292565b6040516100ea9190610848565b60405180910390f35b3480156100fe575f80fd5b506101196004803603810190610114919061088f565b610298565b6040516101269190610848565b60405180910390f35b34801561013a575f80fd5b50610155600480360381019061015091906108e4565b6102ad565b005b348015610162575f80fd5b5061016b610425565b6040516101789190610817565b60405180910390f35b34801561018c575f80fd5b5061019561044a565b6040516101a29190610817565b60405180910390f35b3480156101b6575f80fd5b506101bf61046d565b6040516101cc9190610848565b60405180910390f35b3480156101e0575f80fd5b506101fb60048036038101906101f691906108e4565b610473565b6040516102089190610848565b60405180910390f35b6102196104db565b005b348015610226575f80fd5b5061022f610530565b60405161023c9190610848565b60405180910390f35b348015610250575f80fd5b5061026b600480360381019061026691906108e4565b610536565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6005602052805f5260405f205f915090505481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103319061098f565b60405180910390fd5b5f811161037c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610373906109f7565b60405180910390fd5b478111156103bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b690610a5f565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610421573d5f803e3d5ffd5b5050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b5f8061048a8360035461074a90919063ffffffff16565b90505f6104b6826104a860045460035461075f90919063ffffffff16565b61077490919063ffffffff16565b90505f6104ce8260045461078990919063ffffffff16565b9050809350505050919050565b3460055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546105279190610aaa565b92505081905550565b60035481565b5f8111610578576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056f906109f7565b60405180910390fd5b5f61058282610473565b90505f6105ad60065461059f60648561075f90919063ffffffff16565b61078990919063ffffffff16565b905060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161060d93929190610add565b6020604051808303815f875af1158015610629573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061064d9190610b47565b5060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016106aa929190610b72565b6020604051808303815f875af11580156106c6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106ea9190610b47565b506106f5838361079e565b3373ffffffffffffffffffffffffffffffffffffffff167f77f92a1b6a1a11de8ca49515ad4c1fad45632dd3442167d74b90b304a3c7a758848360405161073d929190610b99565b60405180910390a2505050565b5f81836107579190610aaa565b905092915050565b5f818361076c9190610bc0565b905092915050565b5f81836107819190610c2e565b905092915050565b5f81836107969190610c5e565b905092915050565b6107b38260035461074a90919063ffffffff16565b6003819055506107ce8160045461078990919063ffffffff16565b6004819055505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610801826107d8565b9050919050565b610811816107f7565b82525050565b5f60208201905061082a5f830184610808565b92915050565b5f819050919050565b61084281610830565b82525050565b5f60208201905061085b5f830184610839565b92915050565b5f80fd5b61086e816107f7565b8114610878575f80fd5b50565b5f8135905061088981610865565b92915050565b5f602082840312156108a4576108a3610861565b5b5f6108b18482850161087b565b91505092915050565b6108c381610830565b81146108cd575f80fd5b50565b5f813590506108de816108ba565b92915050565b5f602082840312156108f9576108f8610861565b5b5f610906848285016108d0565b91505092915050565b5f82825260208201905092915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f5f8201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f61097960218361090f565b91506109848261091f565b604082019050919050565b5f6020820190508181035f8301526109a68161096d565b9050919050565b7f496e76616c696420616d6f756e740000000000000000000000000000000000005f82015250565b5f6109e1600e8361090f565b91506109ec826109ad565b602082019050919050565b5f6020820190508181035f830152610a0e816109d5565b9050919050565b7f496e73756666696369656e7420636f6e74726163742062616c616e63650000005f82015250565b5f610a49601d8361090f565b9150610a5482610a15565b602082019050919050565b5f6020820190508181035f830152610a7681610a3d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610ab482610830565b9150610abf83610830565b9250828201905080821115610ad757610ad6610a7d565b5b92915050565b5f606082019050610af05f830186610808565b610afd6020830185610808565b610b0a6040830184610839565b949350505050565b5f8115159050919050565b610b2681610b12565b8114610b30575f80fd5b50565b5f81519050610b4181610b1d565b92915050565b5f60208284031215610b5c57610b5b610861565b5b5f610b6984828501610b33565b91505092915050565b5f604082019050610b855f830185610808565b610b926020830184610839565b9392505050565b5f604082019050610bac5f830185610839565b610bb96020830184610839565b9392505050565b5f610bca82610830565b9150610bd583610830565b9250828202610be381610830565b91508282048414831517610bfa57610bf9610a7d565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610c3882610830565b9150610c4383610830565b925082610c5357610c52610c01565b5b828204905092915050565b5f610c6882610830565b9150610c7383610830565b9250828203905081811115610c8b57610c8a610a7d565b5b9291505056fea2646970667358221220352415b7fbbdd1b70850d524ef62d1a983e88677176394b5ffdd5b711696efc864736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1E PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xE6C CODESIZE SUB DUP1 PUSH2 0xE6C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x36 SWAP2 SWAP1 PUSH2 0x15A JUMP JUMPDEST CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x198 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x129 DUP3 PUSH2 0x100 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x139 DUP2 PUSH2 0x11F JUMP JUMPDEST DUP2 EQ PUSH2 0x143 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x154 DUP2 PUSH2 0x130 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x170 JUMPI PUSH2 0x16F PUSH2 0xFC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17D DUP6 DUP3 DUP7 ADD PUSH2 0x146 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18E DUP6 DUP3 DUP7 ADD PUSH2 0x146 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC7 DUP1 PUSH2 0x1A5 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xA001ECDD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xA393BFD6 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0xDC5FA6C5 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xFE784EAA EQ PUSH2 0x245 JUMPI PUSH2 0x9B JUMP JUMPDEST DUP1 PUSH4 0xFC63D10 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x19E36F3B EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0x157 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH2 0x26D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP2 SWAP1 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x119 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x2AD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x195 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x46D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH2 0x4DB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x250 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x536 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x33A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x331 SWAP1 PUSH2 0x98F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x37C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x373 SWAP1 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP1 PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x421 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x48A DUP4 PUSH1 0x3 SLOAD PUSH2 0x74A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x4B6 DUP3 PUSH2 0x4A8 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x75F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x774 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x4CE DUP3 PUSH1 0x4 SLOAD PUSH2 0x789 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLVALUE PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x527 SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x578 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56F SWAP1 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x582 DUP3 PUSH2 0x473 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x5AD PUSH1 0x6 SLOAD PUSH2 0x59F PUSH1 0x64 DUP6 PUSH2 0x75F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x789 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xADD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x629 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x64D SWAP2 SWAP1 PUSH2 0xB47 JUMP JUMPDEST POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AA SWAP3 SWAP2 SWAP1 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6EA SWAP2 SWAP1 PUSH2 0xB47 JUMP JUMPDEST POP PUSH2 0x6F5 DUP4 DUP4 PUSH2 0x79E JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x77F92A1B6A1A11DE8CA49515AD4C1FAD45632DD3442167D74B90B304A3C7A758 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x73D SWAP3 SWAP2 SWAP1 PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x757 SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x76C SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x781 SWAP2 SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x796 SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7B3 DUP3 PUSH1 0x3 SLOAD PUSH2 0x74A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x7CE DUP2 PUSH1 0x4 SLOAD PUSH2 0x789 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x801 DUP3 PUSH2 0x7D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x811 DUP2 PUSH2 0x7F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x82A PUSH0 DUP4 ADD DUP5 PUSH2 0x808 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x842 DUP2 PUSH2 0x830 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x85B PUSH0 DUP4 ADD DUP5 PUSH2 0x839 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x86E DUP2 PUSH2 0x7F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x878 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x889 DUP2 PUSH2 0x865 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8A4 JUMPI PUSH2 0x8A3 PUSH2 0x861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8B1 DUP5 DUP3 DUP6 ADD PUSH2 0x87B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8C3 DUP2 PUSH2 0x830 JUMP JUMPDEST DUP2 EQ PUSH2 0x8CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8DE DUP2 PUSH2 0x8BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F9 JUMPI PUSH2 0x8F8 PUSH2 0x861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x906 DUP5 DUP3 DUP6 ADD PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x979 PUSH1 0x21 DUP4 PUSH2 0x90F JUMP JUMPDEST SWAP2 POP PUSH2 0x984 DUP3 PUSH2 0x91F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9A6 DUP2 PUSH2 0x96D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9E1 PUSH1 0xE DUP4 PUSH2 0x90F JUMP JUMPDEST SWAP2 POP PUSH2 0x9EC DUP3 PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA0E DUP2 PUSH2 0x9D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA49 PUSH1 0x1D DUP4 PUSH2 0x90F JUMP JUMPDEST SWAP2 POP PUSH2 0xA54 DUP3 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA76 DUP2 PUSH2 0xA3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAB4 DUP3 PUSH2 0x830 JUMP JUMPDEST SWAP2 POP PUSH2 0xABF DUP4 PUSH2 0x830 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAD7 JUMPI PUSH2 0xAD6 PUSH2 0xA7D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xAF0 PUSH0 DUP4 ADD DUP7 PUSH2 0x808 JUMP JUMPDEST PUSH2 0xAFD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x808 JUMP JUMPDEST PUSH2 0xB0A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x839 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB26 DUP2 PUSH2 0xB12 JUMP JUMPDEST DUP2 EQ PUSH2 0xB30 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB41 DUP2 PUSH2 0xB1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB5C JUMPI PUSH2 0xB5B PUSH2 0x861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB69 DUP5 DUP3 DUP6 ADD PUSH2 0xB33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB85 PUSH0 DUP4 ADD DUP6 PUSH2 0x808 JUMP JUMPDEST PUSH2 0xB92 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x839 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBAC PUSH0 DUP4 ADD DUP6 PUSH2 0x839 JUMP JUMPDEST PUSH2 0xBB9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x839 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBCA DUP3 PUSH2 0x830 JUMP JUMPDEST SWAP2 POP PUSH2 0xBD5 DUP4 PUSH2 0x830 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xBE3 DUP2 PUSH2 0x830 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xBFA JUMPI PUSH2 0xBF9 PUSH2 0xA7D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC38 DUP3 PUSH2 0x830 JUMP JUMPDEST SWAP2 POP PUSH2 0xC43 DUP4 PUSH2 0x830 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC53 JUMPI PUSH2 0xC52 PUSH2 0xC01 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC68 DUP3 PUSH2 0x830 JUMP JUMPDEST SWAP2 POP PUSH2 0xC73 DUP4 PUSH2 0x830 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xC8B JUMPI PUSH2 0xC8A PUSH2 0xA7D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0x24 ISZERO 0xB7 0xFB 0xBD 0xD1 0xB7 ADDMOD POP 0xD5 0x24 0xEF PUSH3 0xD1A983 0xE8 DUP7 PUSH24 0x176394B5FFDD5B711696EFC864736F6C6343000816003300 ",
							"sourceMap": "147:2703:2:-:0;;;436:8;405:39;;855:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;920:10;912:5;;:18;;;;;;;;;;;;;;;;;;950:7;941:6;;:16;;;;;;;;;;;;;;;;;;977:7;968:6;;:16;;;;;;;;;;;;;;;;;;855:137;;147:2703;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;147:2703:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@add_253": {
									"entryPoint": 1866,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balances_410": {
									"entryPoint": 664,
									"id": 410,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculateSwapAmount_540": {
									"entryPoint": 1139,
									"id": 540,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@deposit_506": {
									"entryPoint": 1243,
									"id": 506,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_298": {
									"entryPoint": 1908,
									"id": 298,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@feePercentage_415": {
									"entryPoint": 1133,
									"id": 415,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_283": {
									"entryPoint": 1887,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_398": {
									"entryPoint": 1098,
									"id": 398,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserveA_404": {
									"entryPoint": 1328,
									"id": 404,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserveB_406": {
									"entryPoint": 658,
									"id": 406,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_268": {
									"entryPoint": 1929,
									"id": 268,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@swapTokens_603": {
									"entryPoint": 1334,
									"id": 603,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tokenA_400": {
									"entryPoint": 621,
									"id": 400,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenB_402": {
									"entryPoint": 1061,
									"id": 402,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateReserves_494": {
									"entryPoint": 1950,
									"id": 494,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdraw_637": {
									"entryPoint": 685,
									"id": 637,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2781,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2930,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2969,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2685,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3073,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2145,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef": {
									"entryPoint": 2335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1": {
									"entryPoint": 2477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749": {
									"entryPoint": 2581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8927:3",
										"nodeType": "YulBlock",
										"src": "0:8927:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:3",
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nativeSrc": "62:65:3",
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:3",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nativeSrc": "73:54:3",
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nativeSrc": "184:51:3",
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nativeSrc": "194:35:3",
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nativeSrc": "205:24:3",
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:3",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:3",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nativeSrc": "306:53:3",
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nativeSrc": "328:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nativeSrc": "316:37:3",
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nativeSrc": "316:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:3",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:3",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nativeSrc": "463:124:3",
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nativeSrc": "473:26:3",
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:3",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nativeSrc": "481:18:3",
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:3",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nativeSrc": "562:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nativeSrc": "509:71:3",
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nativeSrc": "509:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:3",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:3",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:3",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											},
											{
												"body": {
													"nativeSrc": "638:32:3",
													"nodeType": "YulBlock",
													"src": "638:32:3",
													"statements": [
														{
															"nativeSrc": "648:16:3",
															"nodeType": "YulAssignment",
															"src": "648:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "659:5:3",
																"nodeType": "YulIdentifier",
																"src": "659:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "648:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "593:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "620:5:3",
														"nodeType": "YulTypedName",
														"src": "620:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "630:7:3",
														"nodeType": "YulTypedName",
														"src": "630:7:3",
														"type": ""
													}
												],
												"src": "593:77:3"
											},
											{
												"body": {
													"nativeSrc": "741:53:3",
													"nodeType": "YulBlock",
													"src": "741:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "758:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "781:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "763:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:3"
																		},
																		"nativeSrc": "763:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "751:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:3"
																},
																"nativeSrc": "751:37:3",
																"nodeType": "YulFunctionCall",
																"src": "751:37:3"
															},
															"nativeSrc": "751:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "751:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "676:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "729:5:3",
														"nodeType": "YulTypedName",
														"src": "729:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "736:3:3",
														"nodeType": "YulTypedName",
														"src": "736:3:3",
														"type": ""
													}
												],
												"src": "676:118:3"
											},
											{
												"body": {
													"nativeSrc": "898:124:3",
													"nodeType": "YulBlock",
													"src": "898:124:3",
													"statements": [
														{
															"nativeSrc": "908:26:3",
															"nodeType": "YulAssignment",
															"src": "908:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "920:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "931:2:3",
																		"nodeType": "YulLiteral",
																		"src": "931:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "916:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:3"
																},
																"nativeSrc": "916:18:3",
																"nodeType": "YulFunctionCall",
																"src": "916:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "908:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "988:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1001:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1012:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "997:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:3"
																		},
																		"nativeSrc": "997:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "944:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:3"
																},
																"nativeSrc": "944:71:3",
																"nodeType": "YulFunctionCall",
																"src": "944:71:3"
															},
															"nativeSrc": "944:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "944:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "800:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "870:9:3",
														"nodeType": "YulTypedName",
														"src": "870:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "882:6:3",
														"nodeType": "YulTypedName",
														"src": "882:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "893:4:3",
														"nodeType": "YulTypedName",
														"src": "893:4:3",
														"type": ""
													}
												],
												"src": "800:222:3"
											},
											{
												"body": {
													"nativeSrc": "1068:35:3",
													"nodeType": "YulBlock",
													"src": "1068:35:3",
													"statements": [
														{
															"nativeSrc": "1078:19:3",
															"nodeType": "YulAssignment",
															"src": "1078:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1094:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1088:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1088:5:3"
																},
																"nativeSrc": "1088:9:3",
																"nodeType": "YulFunctionCall",
																"src": "1088:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1078:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1028:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1061:6:3",
														"nodeType": "YulTypedName",
														"src": "1061:6:3",
														"type": ""
													}
												],
												"src": "1028:75:3"
											},
											{
												"body": {
													"nativeSrc": "1198:28:3",
													"nodeType": "YulBlock",
													"src": "1198:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1215:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1218:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1208:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:3"
																},
																"nativeSrc": "1208:12:3",
																"nodeType": "YulFunctionCall",
																"src": "1208:12:3"
															},
															"nativeSrc": "1208:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "1208:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1109:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "1109:117:3"
											},
											{
												"body": {
													"nativeSrc": "1321:28:3",
													"nodeType": "YulBlock",
													"src": "1321:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1338:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1331:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:3"
																},
																"nativeSrc": "1331:12:3",
																"nodeType": "YulFunctionCall",
																"src": "1331:12:3"
															},
															"nativeSrc": "1331:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "1331:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1232:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "1232:117:3"
											},
											{
												"body": {
													"nativeSrc": "1398:79:3",
													"nodeType": "YulBlock",
													"src": "1398:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1455:16:3",
																"nodeType": "YulBlock",
																"src": "1455:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1464:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1467:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1457:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:3"
																			},
																			"nativeSrc": "1457:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:3"
																		},
																		"nativeSrc": "1457:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1421:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1421:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1446:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1446:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1428:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "1428:17:3"
																				},
																				"nativeSrc": "1428:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1428:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1418:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1418:2:3"
																		},
																		"nativeSrc": "1418:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1418:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1411:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:3"
																},
																"nativeSrc": "1411:43:3",
																"nodeType": "YulFunctionCall",
																"src": "1411:43:3"
															},
															"nativeSrc": "1408:63:3",
															"nodeType": "YulIf",
															"src": "1408:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1355:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1391:5:3",
														"nodeType": "YulTypedName",
														"src": "1391:5:3",
														"type": ""
													}
												],
												"src": "1355:122:3"
											},
											{
												"body": {
													"nativeSrc": "1535:87:3",
													"nodeType": "YulBlock",
													"src": "1535:87:3",
													"statements": [
														{
															"nativeSrc": "1545:29:3",
															"nodeType": "YulAssignment",
															"src": "1545:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1567:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1567:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1554:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1554:12:3"
																},
																"nativeSrc": "1554:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1554:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1545:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1545:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1610:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1610:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1583:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "1583:26:3"
																},
																"nativeSrc": "1583:33:3",
																"nodeType": "YulFunctionCall",
																"src": "1583:33:3"
															},
															"nativeSrc": "1583:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "1583:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1483:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1513:6:3",
														"nodeType": "YulTypedName",
														"src": "1513:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1521:3:3",
														"nodeType": "YulTypedName",
														"src": "1521:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1529:5:3",
														"nodeType": "YulTypedName",
														"src": "1529:5:3",
														"type": ""
													}
												],
												"src": "1483:139:3"
											},
											{
												"body": {
													"nativeSrc": "1694:263:3",
													"nodeType": "YulBlock",
													"src": "1694:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1740:83:3",
																"nodeType": "YulBlock",
																"src": "1740:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1742:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "1742:77:3"
																			},
																			"nativeSrc": "1742:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1742:79:3"
																		},
																		"nativeSrc": "1742:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1742:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1715:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1715:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1724:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1724:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1711:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:3"
																		},
																		"nativeSrc": "1711:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1711:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1736:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1736:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1707:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1707:3:3"
																},
																"nativeSrc": "1707:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1707:32:3"
															},
															"nativeSrc": "1704:119:3",
															"nodeType": "YulIf",
															"src": "1704:119:3"
														},
														{
															"nativeSrc": "1833:117:3",
															"nodeType": "YulBlock",
															"src": "1833:117:3",
															"statements": [
																{
																	"nativeSrc": "1848:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1848:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1862:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1862:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1852:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1852:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1877:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1877:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1912:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1912:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1923:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1923:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1908:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1908:3:3"
																				},
																				"nativeSrc": "1908:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1908:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1932:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1932:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1887:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1887:20:3"
																		},
																		"nativeSrc": "1887:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1887:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1877:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1877:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1628:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1664:9:3",
														"nodeType": "YulTypedName",
														"src": "1664:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1675:7:3",
														"nodeType": "YulTypedName",
														"src": "1675:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1687:6:3",
														"nodeType": "YulTypedName",
														"src": "1687:6:3",
														"type": ""
													}
												],
												"src": "1628:329:3"
											},
											{
												"body": {
													"nativeSrc": "2006:79:3",
													"nodeType": "YulBlock",
													"src": "2006:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2063:16:3",
																"nodeType": "YulBlock",
																"src": "2063:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2072:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2072:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2075:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2075:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2065:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2065:6:3"
																			},
																			"nativeSrc": "2065:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2065:12:3"
																		},
																		"nativeSrc": "2065:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2065:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2029:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2029:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2054:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "2054:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2036:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "2036:17:3"
																				},
																				"nativeSrc": "2036:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2036:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2026:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "2026:2:3"
																		},
																		"nativeSrc": "2026:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2026:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2019:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:3"
																},
																"nativeSrc": "2019:43:3",
																"nodeType": "YulFunctionCall",
																"src": "2019:43:3"
															},
															"nativeSrc": "2016:63:3",
															"nodeType": "YulIf",
															"src": "2016:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1963:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1999:5:3",
														"nodeType": "YulTypedName",
														"src": "1999:5:3",
														"type": ""
													}
												],
												"src": "1963:122:3"
											},
											{
												"body": {
													"nativeSrc": "2143:87:3",
													"nodeType": "YulBlock",
													"src": "2143:87:3",
													"statements": [
														{
															"nativeSrc": "2153:29:3",
															"nodeType": "YulAssignment",
															"src": "2153:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2175:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2175:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2162:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "2162:12:3"
																},
																"nativeSrc": "2162:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2162:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2153:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "2153:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2218:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2218:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2191:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "2191:26:3"
																},
																"nativeSrc": "2191:33:3",
																"nodeType": "YulFunctionCall",
																"src": "2191:33:3"
															},
															"nativeSrc": "2191:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "2191:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2091:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2121:6:3",
														"nodeType": "YulTypedName",
														"src": "2121:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2129:3:3",
														"nodeType": "YulTypedName",
														"src": "2129:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2137:5:3",
														"nodeType": "YulTypedName",
														"src": "2137:5:3",
														"type": ""
													}
												],
												"src": "2091:139:3"
											},
											{
												"body": {
													"nativeSrc": "2302:263:3",
													"nodeType": "YulBlock",
													"src": "2302:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2348:83:3",
																"nodeType": "YulBlock",
																"src": "2348:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2350:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "2350:77:3"
																			},
																			"nativeSrc": "2350:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2350:79:3"
																		},
																		"nativeSrc": "2350:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2350:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2323:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2323:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2332:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2332:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2319:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2319:3:3"
																		},
																		"nativeSrc": "2319:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2319:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2344:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2344:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2315:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2315:3:3"
																},
																"nativeSrc": "2315:32:3",
																"nodeType": "YulFunctionCall",
																"src": "2315:32:3"
															},
															"nativeSrc": "2312:119:3",
															"nodeType": "YulIf",
															"src": "2312:119:3"
														},
														{
															"nativeSrc": "2441:117:3",
															"nodeType": "YulBlock",
															"src": "2441:117:3",
															"statements": [
																{
																	"nativeSrc": "2456:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2456:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2470:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2470:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2460:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2460:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2485:63:3",
																	"nodeType": "YulAssignment",
																	"src": "2485:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2520:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2520:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2531:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2531:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2516:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2516:3:3"
																				},
																				"nativeSrc": "2516:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2516:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2540:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2540:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2495:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "2495:20:3"
																		},
																		"nativeSrc": "2495:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2495:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2485:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2485:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2236:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2272:9:3",
														"nodeType": "YulTypedName",
														"src": "2272:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2283:7:3",
														"nodeType": "YulTypedName",
														"src": "2283:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2295:6:3",
														"nodeType": "YulTypedName",
														"src": "2295:6:3",
														"type": ""
													}
												],
												"src": "2236:329:3"
											},
											{
												"body": {
													"nativeSrc": "2667:73:3",
													"nodeType": "YulBlock",
													"src": "2667:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2684:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2684:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2689:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2689:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2677:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2677:6:3"
																},
																"nativeSrc": "2677:19:3",
																"nodeType": "YulFunctionCall",
																"src": "2677:19:3"
															},
															"nativeSrc": "2677:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "2677:19:3"
														},
														{
															"nativeSrc": "2705:29:3",
															"nodeType": "YulAssignment",
															"src": "2705:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2724:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2724:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2729:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2729:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2720:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2720:3:3"
																},
																"nativeSrc": "2720:14:3",
																"nodeType": "YulFunctionCall",
																"src": "2720:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2705:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "2705:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2571:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2639:3:3",
														"nodeType": "YulTypedName",
														"src": "2639:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2644:6:3",
														"nodeType": "YulTypedName",
														"src": "2644:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2655:11:3",
														"nodeType": "YulTypedName",
														"src": "2655:11:3",
														"type": ""
													}
												],
												"src": "2571:169:3"
											},
											{
												"body": {
													"nativeSrc": "2852:114:3",
													"nodeType": "YulBlock",
													"src": "2852:114:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2874:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2874:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2882:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2882:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2870:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2870:3:3"
																		},
																		"nativeSrc": "2870:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2870:14:3"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f",
																		"kind": "string",
																		"nativeSrc": "2886:34:3",
																		"nodeType": "YulLiteral",
																		"src": "2886:34:3",
																		"type": "",
																		"value": "Only owner can call this functio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2863:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2863:6:3"
																},
																"nativeSrc": "2863:58:3",
																"nodeType": "YulFunctionCall",
																"src": "2863:58:3"
															},
															"nativeSrc": "2863:58:3",
															"nodeType": "YulExpressionStatement",
															"src": "2863:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2942:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2942:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2950:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2950:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2938:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2938:3:3"
																		},
																		"nativeSrc": "2938:15:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2938:15:3"
																	},
																	{
																		"hexValue": "6e",
																		"kind": "string",
																		"nativeSrc": "2955:3:3",
																		"nodeType": "YulLiteral",
																		"src": "2955:3:3",
																		"type": "",
																		"value": "n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2931:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2931:6:3"
																},
																"nativeSrc": "2931:28:3",
																"nodeType": "YulFunctionCall",
																"src": "2931:28:3"
															},
															"nativeSrc": "2931:28:3",
															"nodeType": "YulExpressionStatement",
															"src": "2931:28:3"
														}
													]
												},
												"name": "store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
												"nativeSrc": "2746:220:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2844:6:3",
														"nodeType": "YulTypedName",
														"src": "2844:6:3",
														"type": ""
													}
												],
												"src": "2746:220:3"
											},
											{
												"body": {
													"nativeSrc": "3118:220:3",
													"nodeType": "YulBlock",
													"src": "3118:220:3",
													"statements": [
														{
															"nativeSrc": "3128:74:3",
															"nodeType": "YulAssignment",
															"src": "3128:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3194:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3194:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3199:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3199:2:3",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3135:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "3135:58:3"
																},
																"nativeSrc": "3135:67:3",
																"nodeType": "YulFunctionCall",
																"src": "3135:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3128:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3128:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3300:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3300:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																	"nativeSrc": "3211:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "3211:88:3"
																},
																"nativeSrc": "3211:93:3",
																"nodeType": "YulFunctionCall",
																"src": "3211:93:3"
															},
															"nativeSrc": "3211:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "3211:93:3"
														},
														{
															"nativeSrc": "3313:19:3",
															"nodeType": "YulAssignment",
															"src": "3313:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3324:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3324:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3329:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3329:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3320:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3320:3:3"
																},
																"nativeSrc": "3320:12:3",
																"nodeType": "YulFunctionCall",
																"src": "3320:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3313:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3313:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2972:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3106:3:3",
														"nodeType": "YulTypedName",
														"src": "3106:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3114:3:3",
														"nodeType": "YulTypedName",
														"src": "3114:3:3",
														"type": ""
													}
												],
												"src": "2972:366:3"
											},
											{
												"body": {
													"nativeSrc": "3515:248:3",
													"nodeType": "YulBlock",
													"src": "3515:248:3",
													"statements": [
														{
															"nativeSrc": "3525:26:3",
															"nodeType": "YulAssignment",
															"src": "3525:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3537:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3537:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3548:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3548:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3533:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3533:3:3"
																},
																"nativeSrc": "3533:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3533:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3525:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3525:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3572:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3572:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3583:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3583:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3568:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3568:3:3"
																		},
																		"nativeSrc": "3568:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3568:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3591:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "3591:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3597:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3597:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3587:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3587:3:3"
																		},
																		"nativeSrc": "3587:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3587:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3561:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3561:6:3"
																},
																"nativeSrc": "3561:47:3",
																"nodeType": "YulFunctionCall",
																"src": "3561:47:3"
															},
															"nativeSrc": "3561:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "3561:47:3"
														},
														{
															"nativeSrc": "3617:139:3",
															"nodeType": "YulAssignment",
															"src": "3617:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3751:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "3751:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3625:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "3625:124:3"
																},
																"nativeSrc": "3625:131:3",
																"nodeType": "YulFunctionCall",
																"src": "3625:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3617:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3617:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3344:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3495:9:3",
														"nodeType": "YulTypedName",
														"src": "3495:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3510:4:3",
														"nodeType": "YulTypedName",
														"src": "3510:4:3",
														"type": ""
													}
												],
												"src": "3344:419:3"
											},
											{
												"body": {
													"nativeSrc": "3875:58:3",
													"nodeType": "YulBlock",
													"src": "3875:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3897:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3897:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3905:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3905:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3893:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3893:3:3"
																		},
																		"nativeSrc": "3893:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3893:14:3"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "3909:16:3",
																		"nodeType": "YulLiteral",
																		"src": "3909:16:3",
																		"type": "",
																		"value": "Invalid amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3886:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3886:6:3"
																},
																"nativeSrc": "3886:40:3",
																"nodeType": "YulFunctionCall",
																"src": "3886:40:3"
															},
															"nativeSrc": "3886:40:3",
															"nodeType": "YulExpressionStatement",
															"src": "3886:40:3"
														}
													]
												},
												"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
												"nativeSrc": "3769:164:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3867:6:3",
														"nodeType": "YulTypedName",
														"src": "3867:6:3",
														"type": ""
													}
												],
												"src": "3769:164:3"
											},
											{
												"body": {
													"nativeSrc": "4085:220:3",
													"nodeType": "YulBlock",
													"src": "4085:220:3",
													"statements": [
														{
															"nativeSrc": "4095:74:3",
															"nodeType": "YulAssignment",
															"src": "4095:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4161:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4161:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4166:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4166:2:3",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4102:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "4102:58:3"
																},
																"nativeSrc": "4102:67:3",
																"nodeType": "YulFunctionCall",
																"src": "4102:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4095:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4095:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4267:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4267:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																	"nativeSrc": "4178:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "4178:88:3"
																},
																"nativeSrc": "4178:93:3",
																"nodeType": "YulFunctionCall",
																"src": "4178:93:3"
															},
															"nativeSrc": "4178:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "4178:93:3"
														},
														{
															"nativeSrc": "4280:19:3",
															"nodeType": "YulAssignment",
															"src": "4280:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4291:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4291:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4296:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4296:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4287:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4287:3:3"
																},
																"nativeSrc": "4287:12:3",
																"nodeType": "YulFunctionCall",
																"src": "4287:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4280:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4280:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3939:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4073:3:3",
														"nodeType": "YulTypedName",
														"src": "4073:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4081:3:3",
														"nodeType": "YulTypedName",
														"src": "4081:3:3",
														"type": ""
													}
												],
												"src": "3939:366:3"
											},
											{
												"body": {
													"nativeSrc": "4482:248:3",
													"nodeType": "YulBlock",
													"src": "4482:248:3",
													"statements": [
														{
															"nativeSrc": "4492:26:3",
															"nodeType": "YulAssignment",
															"src": "4492:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4504:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4504:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4515:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4515:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4500:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4500:3:3"
																},
																"nativeSrc": "4500:18:3",
																"nodeType": "YulFunctionCall",
																"src": "4500:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4492:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4492:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4539:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4539:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4550:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4550:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4535:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4535:3:3"
																		},
																		"nativeSrc": "4535:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4535:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4558:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "4558:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4564:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4564:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4554:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4554:3:3"
																		},
																		"nativeSrc": "4554:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4554:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4528:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4528:6:3"
																},
																"nativeSrc": "4528:47:3",
																"nodeType": "YulFunctionCall",
																"src": "4528:47:3"
															},
															"nativeSrc": "4528:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "4528:47:3"
														},
														{
															"nativeSrc": "4584:139:3",
															"nodeType": "YulAssignment",
															"src": "4584:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4718:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4718:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4592:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "4592:124:3"
																},
																"nativeSrc": "4592:131:3",
																"nodeType": "YulFunctionCall",
																"src": "4592:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4584:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4584:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4311:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4462:9:3",
														"nodeType": "YulTypedName",
														"src": "4462:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4477:4:3",
														"nodeType": "YulTypedName",
														"src": "4477:4:3",
														"type": ""
													}
												],
												"src": "4311:419:3"
											},
											{
												"body": {
													"nativeSrc": "4842:73:3",
													"nodeType": "YulBlock",
													"src": "4842:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4864:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "4864:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4872:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4872:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4860:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4860:3:3"
																		},
																		"nativeSrc": "4860:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4860:14:3"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "4876:31:3",
																		"nodeType": "YulLiteral",
																		"src": "4876:31:3",
																		"type": "",
																		"value": "Insufficient contract balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4853:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4853:6:3"
																},
																"nativeSrc": "4853:55:3",
																"nodeType": "YulFunctionCall",
																"src": "4853:55:3"
															},
															"nativeSrc": "4853:55:3",
															"nodeType": "YulExpressionStatement",
															"src": "4853:55:3"
														}
													]
												},
												"name": "store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
												"nativeSrc": "4736:179:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4834:6:3",
														"nodeType": "YulTypedName",
														"src": "4834:6:3",
														"type": ""
													}
												],
												"src": "4736:179:3"
											},
											{
												"body": {
													"nativeSrc": "5067:220:3",
													"nodeType": "YulBlock",
													"src": "5067:220:3",
													"statements": [
														{
															"nativeSrc": "5077:74:3",
															"nodeType": "YulAssignment",
															"src": "5077:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5143:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5143:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5148:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:3",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5084:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "5084:58:3"
																},
																"nativeSrc": "5084:67:3",
																"nodeType": "YulFunctionCall",
																"src": "5084:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5077:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5077:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5249:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5249:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																	"nativeSrc": "5160:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "5160:88:3"
																},
																"nativeSrc": "5160:93:3",
																"nodeType": "YulFunctionCall",
																"src": "5160:93:3"
															},
															"nativeSrc": "5160:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "5160:93:3"
														},
														{
															"nativeSrc": "5262:19:3",
															"nodeType": "YulAssignment",
															"src": "5262:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5273:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5273:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5278:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5278:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5269:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5269:3:3"
																},
																"nativeSrc": "5269:12:3",
																"nodeType": "YulFunctionCall",
																"src": "5269:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5262:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5262:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4921:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5055:3:3",
														"nodeType": "YulTypedName",
														"src": "5055:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5063:3:3",
														"nodeType": "YulTypedName",
														"src": "5063:3:3",
														"type": ""
													}
												],
												"src": "4921:366:3"
											},
											{
												"body": {
													"nativeSrc": "5464:248:3",
													"nodeType": "YulBlock",
													"src": "5464:248:3",
													"statements": [
														{
															"nativeSrc": "5474:26:3",
															"nodeType": "YulAssignment",
															"src": "5474:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5486:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5486:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5497:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5497:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5482:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5482:3:3"
																},
																"nativeSrc": "5482:18:3",
																"nodeType": "YulFunctionCall",
																"src": "5482:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5474:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5474:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5521:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5521:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5532:1:3",
																				"nodeType": "YulLiteral",
																				"src": "5532:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5517:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5517:3:3"
																		},
																		"nativeSrc": "5517:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5517:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5540:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "5540:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5546:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5546:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5536:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5536:3:3"
																		},
																		"nativeSrc": "5536:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5536:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5510:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5510:6:3"
																},
																"nativeSrc": "5510:47:3",
																"nodeType": "YulFunctionCall",
																"src": "5510:47:3"
															},
															"nativeSrc": "5510:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "5510:47:3"
														},
														{
															"nativeSrc": "5566:139:3",
															"nodeType": "YulAssignment",
															"src": "5566:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5700:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "5700:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5574:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "5574:124:3"
																},
																"nativeSrc": "5574:131:3",
																"nodeType": "YulFunctionCall",
																"src": "5574:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5566:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5566:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5293:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5444:9:3",
														"nodeType": "YulTypedName",
														"src": "5444:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5459:4:3",
														"nodeType": "YulTypedName",
														"src": "5459:4:3",
														"type": ""
													}
												],
												"src": "5293:419:3"
											},
											{
												"body": {
													"nativeSrc": "5746:152:3",
													"nodeType": "YulBlock",
													"src": "5746:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5763:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5763:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5766:77:3",
																		"nodeType": "YulLiteral",
																		"src": "5766:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5756:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5756:6:3"
																},
																"nativeSrc": "5756:88:3",
																"nodeType": "YulFunctionCall",
																"src": "5756:88:3"
															},
															"nativeSrc": "5756:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "5756:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5860:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5860:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5863:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5863:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5853:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5853:6:3"
																},
																"nativeSrc": "5853:15:3",
																"nodeType": "YulFunctionCall",
																"src": "5853:15:3"
															},
															"nativeSrc": "5853:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "5853:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5884:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5884:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5887:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5887:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5877:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5877:6:3"
																},
																"nativeSrc": "5877:15:3",
																"nodeType": "YulFunctionCall",
																"src": "5877:15:3"
															},
															"nativeSrc": "5877:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "5877:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5718:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "5718:180:3"
											},
											{
												"body": {
													"nativeSrc": "5948:147:3",
													"nodeType": "YulBlock",
													"src": "5948:147:3",
													"statements": [
														{
															"nativeSrc": "5958:25:3",
															"nodeType": "YulAssignment",
															"src": "5958:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5981:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5981:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5963:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "5963:17:3"
																},
																"nativeSrc": "5963:20:3",
																"nodeType": "YulFunctionCall",
																"src": "5963:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5958:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5958:1:3"
																}
															]
														},
														{
															"nativeSrc": "5992:25:3",
															"nodeType": "YulAssignment",
															"src": "5992:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6015:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6015:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5997:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "5997:17:3"
																},
																"nativeSrc": "5997:20:3",
																"nodeType": "YulFunctionCall",
																"src": "5997:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5992:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "5992:1:3"
																}
															]
														},
														{
															"nativeSrc": "6026:16:3",
															"nodeType": "YulAssignment",
															"src": "6026:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6037:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6037:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6040:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6040:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6033:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6033:3:3"
																},
																"nativeSrc": "6033:9:3",
																"nodeType": "YulFunctionCall",
																"src": "6033:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6026:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6026:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6066:22:3",
																"nodeType": "YulBlock",
																"src": "6066:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6068:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "6068:16:3"
																			},
																			"nativeSrc": "6068:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6068:18:3"
																		},
																		"nativeSrc": "6068:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6068:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6058:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "6058:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6061:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6061:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6055:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "6055:2:3"
																},
																"nativeSrc": "6055:10:3",
																"nodeType": "YulFunctionCall",
																"src": "6055:10:3"
															},
															"nativeSrc": "6052:36:3",
															"nodeType": "YulIf",
															"src": "6052:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5904:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5935:1:3",
														"nodeType": "YulTypedName",
														"src": "5935:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5938:1:3",
														"nodeType": "YulTypedName",
														"src": "5938:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5944:3:3",
														"nodeType": "YulTypedName",
														"src": "5944:3:3",
														"type": ""
													}
												],
												"src": "5904:191:3"
											},
											{
												"body": {
													"nativeSrc": "6255:288:3",
													"nodeType": "YulBlock",
													"src": "6255:288:3",
													"statements": [
														{
															"nativeSrc": "6265:26:3",
															"nodeType": "YulAssignment",
															"src": "6265:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6277:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6277:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6288:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6288:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6273:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6273:3:3"
																},
																"nativeSrc": "6273:18:3",
																"nodeType": "YulFunctionCall",
																"src": "6273:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6265:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6265:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6345:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "6345:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6358:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6358:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6369:1:3",
																				"nodeType": "YulLiteral",
																				"src": "6369:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6354:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6354:3:3"
																		},
																		"nativeSrc": "6354:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6354:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6301:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "6301:43:3"
																},
																"nativeSrc": "6301:71:3",
																"nodeType": "YulFunctionCall",
																"src": "6301:71:3"
															},
															"nativeSrc": "6301:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "6301:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6426:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "6426:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6439:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6439:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6450:2:3",
																				"nodeType": "YulLiteral",
																				"src": "6450:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6435:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6435:3:3"
																		},
																		"nativeSrc": "6435:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6435:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6382:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "6382:43:3"
																},
																"nativeSrc": "6382:72:3",
																"nodeType": "YulFunctionCall",
																"src": "6382:72:3"
															},
															"nativeSrc": "6382:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "6382:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6508:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "6508:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6521:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6521:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6532:2:3",
																				"nodeType": "YulLiteral",
																				"src": "6532:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6517:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6517:3:3"
																		},
																		"nativeSrc": "6517:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6517:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6464:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "6464:43:3"
																},
																"nativeSrc": "6464:72:3",
																"nodeType": "YulFunctionCall",
																"src": "6464:72:3"
															},
															"nativeSrc": "6464:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "6464:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6101:442:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6211:9:3",
														"nodeType": "YulTypedName",
														"src": "6211:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6223:6:3",
														"nodeType": "YulTypedName",
														"src": "6223:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6231:6:3",
														"nodeType": "YulTypedName",
														"src": "6231:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6239:6:3",
														"nodeType": "YulTypedName",
														"src": "6239:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6250:4:3",
														"nodeType": "YulTypedName",
														"src": "6250:4:3",
														"type": ""
													}
												],
												"src": "6101:442:3"
											},
											{
												"body": {
													"nativeSrc": "6591:48:3",
													"nodeType": "YulBlock",
													"src": "6591:48:3",
													"statements": [
														{
															"nativeSrc": "6601:32:3",
															"nodeType": "YulAssignment",
															"src": "6601:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6626:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "6626:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6619:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "6619:6:3"
																		},
																		"nativeSrc": "6619:13:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6619:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6612:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6612:6:3"
																},
																"nativeSrc": "6612:21:3",
																"nodeType": "YulFunctionCall",
																"src": "6612:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6601:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "6601:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "6549:90:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6573:5:3",
														"nodeType": "YulTypedName",
														"src": "6573:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6583:7:3",
														"nodeType": "YulTypedName",
														"src": "6583:7:3",
														"type": ""
													}
												],
												"src": "6549:90:3"
											},
											{
												"body": {
													"nativeSrc": "6685:76:3",
													"nodeType": "YulBlock",
													"src": "6685:76:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "6739:16:3",
																"nodeType": "YulBlock",
																"src": "6739:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6748:1:3",
																					"nodeType": "YulLiteral",
																					"src": "6748:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6751:1:3",
																					"nodeType": "YulLiteral",
																					"src": "6751:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6741:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6741:6:3"
																			},
																			"nativeSrc": "6741:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6741:12:3"
																		},
																		"nativeSrc": "6741:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6741:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6708:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "6708:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6730:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "6730:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6715:14:3",
																					"nodeType": "YulIdentifier",
																					"src": "6715:14:3"
																				},
																				"nativeSrc": "6715:21:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6715:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6705:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "6705:2:3"
																		},
																		"nativeSrc": "6705:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6705:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6698:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6698:6:3"
																},
																"nativeSrc": "6698:40:3",
																"nodeType": "YulFunctionCall",
																"src": "6698:40:3"
															},
															"nativeSrc": "6695:60:3",
															"nodeType": "YulIf",
															"src": "6695:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6645:116:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6678:5:3",
														"nodeType": "YulTypedName",
														"src": "6678:5:3",
														"type": ""
													}
												],
												"src": "6645:116:3"
											},
											{
												"body": {
													"nativeSrc": "6827:77:3",
													"nodeType": "YulBlock",
													"src": "6827:77:3",
													"statements": [
														{
															"nativeSrc": "6837:22:3",
															"nodeType": "YulAssignment",
															"src": "6837:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6852:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "6852:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6846:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "6846:5:3"
																},
																"nativeSrc": "6846:13:3",
																"nodeType": "YulFunctionCall",
																"src": "6846:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6837:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "6837:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6892:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "6892:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6868:23:3",
																	"nodeType": "YulIdentifier",
																	"src": "6868:23:3"
																},
																"nativeSrc": "6868:30:3",
																"nodeType": "YulFunctionCall",
																"src": "6868:30:3"
															},
															"nativeSrc": "6868:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "6868:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "6767:137:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6805:6:3",
														"nodeType": "YulTypedName",
														"src": "6805:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6813:3:3",
														"nodeType": "YulTypedName",
														"src": "6813:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6821:5:3",
														"nodeType": "YulTypedName",
														"src": "6821:5:3",
														"type": ""
													}
												],
												"src": "6767:137:3"
											},
											{
												"body": {
													"nativeSrc": "6984:271:3",
													"nodeType": "YulBlock",
													"src": "6984:271:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "7030:83:3",
																"nodeType": "YulBlock",
																"src": "7030:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7032:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "7032:77:3"
																			},
																			"nativeSrc": "7032:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "7032:79:3"
																		},
																		"nativeSrc": "7032:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "7032:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7005:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "7005:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7014:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "7014:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7001:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7001:3:3"
																		},
																		"nativeSrc": "7001:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7001:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7026:2:3",
																		"nodeType": "YulLiteral",
																		"src": "7026:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6997:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6997:3:3"
																},
																"nativeSrc": "6997:32:3",
																"nodeType": "YulFunctionCall",
																"src": "6997:32:3"
															},
															"nativeSrc": "6994:119:3",
															"nodeType": "YulIf",
															"src": "6994:119:3"
														},
														{
															"nativeSrc": "7123:125:3",
															"nodeType": "YulBlock",
															"src": "7123:125:3",
															"statements": [
																{
																	"nativeSrc": "7138:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7138:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7152:1:3",
																		"nodeType": "YulLiteral",
																		"src": "7152:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7142:6:3",
																			"nodeType": "YulTypedName",
																			"src": "7142:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7167:71:3",
																	"nodeType": "YulAssignment",
																	"src": "7167:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7210:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "7210:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7221:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "7221:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7206:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "7206:3:3"
																				},
																				"nativeSrc": "7206:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "7206:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7230:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "7230:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "7177:28:3",
																			"nodeType": "YulIdentifier",
																			"src": "7177:28:3"
																		},
																		"nativeSrc": "7177:61:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7177:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7167:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "7167:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6910:345:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6954:9:3",
														"nodeType": "YulTypedName",
														"src": "6954:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6965:7:3",
														"nodeType": "YulTypedName",
														"src": "6965:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6977:6:3",
														"nodeType": "YulTypedName",
														"src": "6977:6:3",
														"type": ""
													}
												],
												"src": "6910:345:3"
											},
											{
												"body": {
													"nativeSrc": "7387:206:3",
													"nodeType": "YulBlock",
													"src": "7387:206:3",
													"statements": [
														{
															"nativeSrc": "7397:26:3",
															"nodeType": "YulAssignment",
															"src": "7397:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7409:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "7409:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7420:2:3",
																		"nodeType": "YulLiteral",
																		"src": "7420:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7405:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7405:3:3"
																},
																"nativeSrc": "7405:18:3",
																"nodeType": "YulFunctionCall",
																"src": "7405:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7397:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "7397:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7477:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "7477:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7490:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "7490:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7501:1:3",
																				"nodeType": "YulLiteral",
																				"src": "7501:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7486:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7486:3:3"
																		},
																		"nativeSrc": "7486:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7486:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7433:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "7433:43:3"
																},
																"nativeSrc": "7433:71:3",
																"nodeType": "YulFunctionCall",
																"src": "7433:71:3"
															},
															"nativeSrc": "7433:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "7433:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7558:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "7558:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7571:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "7571:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7582:2:3",
																				"nodeType": "YulLiteral",
																				"src": "7582:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7567:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7567:3:3"
																		},
																		"nativeSrc": "7567:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7567:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7514:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "7514:43:3"
																},
																"nativeSrc": "7514:72:3",
																"nodeType": "YulFunctionCall",
																"src": "7514:72:3"
															},
															"nativeSrc": "7514:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "7514:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7261:332:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7351:9:3",
														"nodeType": "YulTypedName",
														"src": "7351:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7363:6:3",
														"nodeType": "YulTypedName",
														"src": "7363:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7371:6:3",
														"nodeType": "YulTypedName",
														"src": "7371:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7382:4:3",
														"nodeType": "YulTypedName",
														"src": "7382:4:3",
														"type": ""
													}
												],
												"src": "7261:332:3"
											},
											{
												"body": {
													"nativeSrc": "7725:206:3",
													"nodeType": "YulBlock",
													"src": "7725:206:3",
													"statements": [
														{
															"nativeSrc": "7735:26:3",
															"nodeType": "YulAssignment",
															"src": "7735:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7747:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "7747:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7758:2:3",
																		"nodeType": "YulLiteral",
																		"src": "7758:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7743:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7743:3:3"
																},
																"nativeSrc": "7743:18:3",
																"nodeType": "YulFunctionCall",
																"src": "7743:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7735:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "7735:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7815:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "7815:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7828:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "7828:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7839:1:3",
																				"nodeType": "YulLiteral",
																				"src": "7839:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7824:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7824:3:3"
																		},
																		"nativeSrc": "7824:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7824:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7771:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "7771:43:3"
																},
																"nativeSrc": "7771:71:3",
																"nodeType": "YulFunctionCall",
																"src": "7771:71:3"
															},
															"nativeSrc": "7771:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "7771:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7896:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "7896:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7909:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "7909:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7920:2:3",
																				"nodeType": "YulLiteral",
																				"src": "7920:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7905:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7905:3:3"
																		},
																		"nativeSrc": "7905:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7905:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7852:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "7852:43:3"
																},
																"nativeSrc": "7852:72:3",
																"nodeType": "YulFunctionCall",
																"src": "7852:72:3"
															},
															"nativeSrc": "7852:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "7852:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7599:332:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7689:9:3",
														"nodeType": "YulTypedName",
														"src": "7689:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7701:6:3",
														"nodeType": "YulTypedName",
														"src": "7701:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7709:6:3",
														"nodeType": "YulTypedName",
														"src": "7709:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7720:4:3",
														"nodeType": "YulTypedName",
														"src": "7720:4:3",
														"type": ""
													}
												],
												"src": "7599:332:3"
											},
											{
												"body": {
													"nativeSrc": "7985:362:3",
													"nodeType": "YulBlock",
													"src": "7985:362:3",
													"statements": [
														{
															"nativeSrc": "7995:25:3",
															"nodeType": "YulAssignment",
															"src": "7995:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8018:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8018:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8000:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "8000:17:3"
																},
																"nativeSrc": "8000:20:3",
																"nodeType": "YulFunctionCall",
																"src": "8000:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7995:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "7995:1:3"
																}
															]
														},
														{
															"nativeSrc": "8029:25:3",
															"nodeType": "YulAssignment",
															"src": "8029:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8052:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8052:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8034:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "8034:17:3"
																},
																"nativeSrc": "8034:20:3",
																"nodeType": "YulFunctionCall",
																"src": "8034:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8029:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "8029:1:3"
																}
															]
														},
														{
															"nativeSrc": "8063:28:3",
															"nodeType": "YulVariableDeclaration",
															"src": "8063:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8086:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8086:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8089:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8089:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8082:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8082:3:3"
																},
																"nativeSrc": "8082:9:3",
																"nodeType": "YulFunctionCall",
																"src": "8082:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8067:11:3",
																	"nodeType": "YulTypedName",
																	"src": "8067:11:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8100:41:3",
															"nodeType": "YulAssignment",
															"src": "8100:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8129:11:3",
																		"nodeType": "YulIdentifier",
																		"src": "8129:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8111:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "8111:17:3"
																},
																"nativeSrc": "8111:30:3",
																"nodeType": "YulFunctionCall",
																"src": "8111:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8100:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "8100:7:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8318:22:3",
																"nodeType": "YulBlock",
																"src": "8318:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8320:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "8320:16:3"
																			},
																			"nativeSrc": "8320:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "8320:18:3"
																		},
																		"nativeSrc": "8320:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "8320:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8251:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "8251:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8244:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "8244:6:3"
																				},
																				"nativeSrc": "8244:9:3",
																				"nodeType": "YulFunctionCall",
																				"src": "8244:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8274:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "8274:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8281:7:3",
																								"nodeType": "YulIdentifier",
																								"src": "8281:7:3"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8290:1:3",
																								"nodeType": "YulIdentifier",
																								"src": "8290:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8277:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "8277:3:3"
																						},
																						"nativeSrc": "8277:15:3",
																						"nodeType": "YulFunctionCall",
																						"src": "8277:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8271:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "8271:2:3"
																				},
																				"nativeSrc": "8271:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "8271:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8224:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "8224:2:3"
																		},
																		"nativeSrc": "8224:83:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8224:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8204:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8204:6:3"
																},
																"nativeSrc": "8204:113:3",
																"nodeType": "YulFunctionCall",
																"src": "8204:113:3"
															},
															"nativeSrc": "8201:139:3",
															"nodeType": "YulIf",
															"src": "8201:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7937:410:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7968:1:3",
														"nodeType": "YulTypedName",
														"src": "7968:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7971:1:3",
														"nodeType": "YulTypedName",
														"src": "7971:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7977:7:3",
														"nodeType": "YulTypedName",
														"src": "7977:7:3",
														"type": ""
													}
												],
												"src": "7937:410:3"
											},
											{
												"body": {
													"nativeSrc": "8381:152:3",
													"nodeType": "YulBlock",
													"src": "8381:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8398:1:3",
																		"nodeType": "YulLiteral",
																		"src": "8398:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8401:77:3",
																		"nodeType": "YulLiteral",
																		"src": "8401:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8391:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8391:6:3"
																},
																"nativeSrc": "8391:88:3",
																"nodeType": "YulFunctionCall",
																"src": "8391:88:3"
															},
															"nativeSrc": "8391:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "8391:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8495:1:3",
																		"nodeType": "YulLiteral",
																		"src": "8495:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8498:4:3",
																		"nodeType": "YulLiteral",
																		"src": "8498:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8488:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8488:6:3"
																},
																"nativeSrc": "8488:15:3",
																"nodeType": "YulFunctionCall",
																"src": "8488:15:3"
															},
															"nativeSrc": "8488:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "8488:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8519:1:3",
																		"nodeType": "YulLiteral",
																		"src": "8519:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8522:4:3",
																		"nodeType": "YulLiteral",
																		"src": "8522:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8512:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8512:6:3"
																},
																"nativeSrc": "8512:15:3",
																"nodeType": "YulFunctionCall",
																"src": "8512:15:3"
															},
															"nativeSrc": "8512:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "8512:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8353:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "8353:180:3"
											},
											{
												"body": {
													"nativeSrc": "8581:143:3",
													"nodeType": "YulBlock",
													"src": "8581:143:3",
													"statements": [
														{
															"nativeSrc": "8591:25:3",
															"nodeType": "YulAssignment",
															"src": "8591:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8614:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8614:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8596:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "8596:17:3"
																},
																"nativeSrc": "8596:20:3",
																"nodeType": "YulFunctionCall",
																"src": "8596:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8591:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "8591:1:3"
																}
															]
														},
														{
															"nativeSrc": "8625:25:3",
															"nodeType": "YulAssignment",
															"src": "8625:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8648:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8648:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8630:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "8630:17:3"
																},
																"nativeSrc": "8630:20:3",
																"nodeType": "YulFunctionCall",
																"src": "8630:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8625:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "8625:1:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8672:22:3",
																"nodeType": "YulBlock",
																"src": "8672:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8674:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "8674:16:3"
																			},
																			"nativeSrc": "8674:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "8674:18:3"
																		},
																		"nativeSrc": "8674:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "8674:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8669:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8669:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8662:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8662:6:3"
																},
																"nativeSrc": "8662:9:3",
																"nodeType": "YulFunctionCall",
																"src": "8662:9:3"
															},
															"nativeSrc": "8659:35:3",
															"nodeType": "YulIf",
															"src": "8659:35:3"
														},
														{
															"nativeSrc": "8704:14:3",
															"nodeType": "YulAssignment",
															"src": "8704:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8713:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8713:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8716:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8716:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8709:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8709:3:3"
																},
																"nativeSrc": "8709:9:3",
																"nodeType": "YulFunctionCall",
																"src": "8709:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8704:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "8704:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8539:185:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8570:1:3",
														"nodeType": "YulTypedName",
														"src": "8570:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8573:1:3",
														"nodeType": "YulTypedName",
														"src": "8573:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8579:1:3",
														"nodeType": "YulTypedName",
														"src": "8579:1:3",
														"type": ""
													}
												],
												"src": "8539:185:3"
											},
											{
												"body": {
													"nativeSrc": "8775:149:3",
													"nodeType": "YulBlock",
													"src": "8775:149:3",
													"statements": [
														{
															"nativeSrc": "8785:25:3",
															"nodeType": "YulAssignment",
															"src": "8785:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8808:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8808:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8790:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "8790:17:3"
																},
																"nativeSrc": "8790:20:3",
																"nodeType": "YulFunctionCall",
																"src": "8790:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8785:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "8785:1:3"
																}
															]
														},
														{
															"nativeSrc": "8819:25:3",
															"nodeType": "YulAssignment",
															"src": "8819:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8842:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8842:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8824:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "8824:17:3"
																},
																"nativeSrc": "8824:20:3",
																"nodeType": "YulFunctionCall",
																"src": "8824:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8819:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "8819:1:3"
																}
															]
														},
														{
															"nativeSrc": "8853:17:3",
															"nodeType": "YulAssignment",
															"src": "8853:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8865:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8865:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8868:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8868:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8861:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8861:3:3"
																},
																"nativeSrc": "8861:9:3",
																"nodeType": "YulFunctionCall",
																"src": "8861:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8853:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "8853:4:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8895:22:3",
																"nodeType": "YulBlock",
																"src": "8895:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8897:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "8897:16:3"
																			},
																			"nativeSrc": "8897:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "8897:18:3"
																		},
																		"nativeSrc": "8897:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "8897:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8886:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "8886:4:3"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8892:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8892:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8883:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "8883:2:3"
																},
																"nativeSrc": "8883:11:3",
																"nodeType": "YulFunctionCall",
																"src": "8883:11:3"
															},
															"nativeSrc": "8880:37:3",
															"nodeType": "YulIf",
															"src": "8880:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8730:194:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8761:1:3",
														"nodeType": "YulTypedName",
														"src": "8761:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8764:1:3",
														"nodeType": "YulTypedName",
														"src": "8764:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8770:4:3",
														"nodeType": "YulTypedName",
														"src": "8770:4:3",
														"type": ""
													}
												],
												"src": "8730:194:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can call this functio\")\n\n        mstore(add(memPtr, 32), \"n\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient contract balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061009b575f3560e01c80638da5cb5b116100635780638da5cb5b14610181578063a001ecdd146101ab578063a393bfd6146101d5578063d0e30db014610211578063dc5fa6c51461021b578063fe784eaa146102455761009b565b80630fc63d101461009f57806319e36f3b146100c957806327e235e3146100f35780632e1a7d4d1461012f5780635f64b55b14610157575b5f80fd5b3480156100aa575f80fd5b506100b361026d565b6040516100c09190610817565b60405180910390f35b3480156100d4575f80fd5b506100dd610292565b6040516100ea9190610848565b60405180910390f35b3480156100fe575f80fd5b506101196004803603810190610114919061088f565b610298565b6040516101269190610848565b60405180910390f35b34801561013a575f80fd5b50610155600480360381019061015091906108e4565b6102ad565b005b348015610162575f80fd5b5061016b610425565b6040516101789190610817565b60405180910390f35b34801561018c575f80fd5b5061019561044a565b6040516101a29190610817565b60405180910390f35b3480156101b6575f80fd5b506101bf61046d565b6040516101cc9190610848565b60405180910390f35b3480156101e0575f80fd5b506101fb60048036038101906101f691906108e4565b610473565b6040516102089190610848565b60405180910390f35b6102196104db565b005b348015610226575f80fd5b5061022f610530565b60405161023c9190610848565b60405180910390f35b348015610250575f80fd5b5061026b600480360381019061026691906108e4565b610536565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6005602052805f5260405f205f915090505481565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103319061098f565b60405180910390fd5b5f811161037c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610373906109f7565b60405180910390fd5b478111156103bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b690610a5f565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610421573d5f803e3d5ffd5b5050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b5f8061048a8360035461074a90919063ffffffff16565b90505f6104b6826104a860045460035461075f90919063ffffffff16565b61077490919063ffffffff16565b90505f6104ce8260045461078990919063ffffffff16565b9050809350505050919050565b3460055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546105279190610aaa565b92505081905550565b60035481565b5f8111610578576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056f906109f7565b60405180910390fd5b5f61058282610473565b90505f6105ad60065461059f60648561075f90919063ffffffff16565b61078990919063ffffffff16565b905060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161060d93929190610add565b6020604051808303815f875af1158015610629573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061064d9190610b47565b5060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016106aa929190610b72565b6020604051808303815f875af11580156106c6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106ea9190610b47565b506106f5838361079e565b3373ffffffffffffffffffffffffffffffffffffffff167f77f92a1b6a1a11de8ca49515ad4c1fad45632dd3442167d74b90b304a3c7a758848360405161073d929190610b99565b60405180910390a2505050565b5f81836107579190610aaa565b905092915050565b5f818361076c9190610bc0565b905092915050565b5f81836107819190610c2e565b905092915050565b5f81836107969190610c5e565b905092915050565b6107b38260035461074a90919063ffffffff16565b6003819055506107ce8160045461078990919063ffffffff16565b6004819055505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610801826107d8565b9050919050565b610811816107f7565b82525050565b5f60208201905061082a5f830184610808565b92915050565b5f819050919050565b61084281610830565b82525050565b5f60208201905061085b5f830184610839565b92915050565b5f80fd5b61086e816107f7565b8114610878575f80fd5b50565b5f8135905061088981610865565b92915050565b5f602082840312156108a4576108a3610861565b5b5f6108b18482850161087b565b91505092915050565b6108c381610830565b81146108cd575f80fd5b50565b5f813590506108de816108ba565b92915050565b5f602082840312156108f9576108f8610861565b5b5f610906848285016108d0565b91505092915050565b5f82825260208201905092915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f5f8201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f61097960218361090f565b91506109848261091f565b604082019050919050565b5f6020820190508181035f8301526109a68161096d565b9050919050565b7f496e76616c696420616d6f756e740000000000000000000000000000000000005f82015250565b5f6109e1600e8361090f565b91506109ec826109ad565b602082019050919050565b5f6020820190508181035f830152610a0e816109d5565b9050919050565b7f496e73756666696369656e7420636f6e74726163742062616c616e63650000005f82015250565b5f610a49601d8361090f565b9150610a5482610a15565b602082019050919050565b5f6020820190508181035f830152610a7681610a3d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610ab482610830565b9150610abf83610830565b9250828201905080821115610ad757610ad6610a7d565b5b92915050565b5f606082019050610af05f830186610808565b610afd6020830185610808565b610b0a6040830184610839565b949350505050565b5f8115159050919050565b610b2681610b12565b8114610b30575f80fd5b50565b5f81519050610b4181610b1d565b92915050565b5f60208284031215610b5c57610b5b610861565b5b5f610b6984828501610b33565b91505092915050565b5f604082019050610b855f830185610808565b610b926020830184610839565b9392505050565b5f604082019050610bac5f830185610839565b610bb96020830184610839565b9392505050565b5f610bca82610830565b9150610bd583610830565b9250828202610be381610830565b91508282048414831517610bfa57610bf9610a7d565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610c3882610830565b9150610c4383610830565b925082610c5357610c52610c01565b5b828204905092915050565b5f610c6882610830565b9150610c7383610830565b9250828203905081811115610c8b57610c8a610a7d565b5b9291505056fea2646970667358221220352415b7fbbdd1b70850d524ef62d1a983e88677176394b5ffdd5b711696efc864736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xA001ECDD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xA393BFD6 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0xDC5FA6C5 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xFE784EAA EQ PUSH2 0x245 JUMPI PUSH2 0x9B JUMP JUMPDEST DUP1 PUSH4 0xFC63D10 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x19E36F3B EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x5F64B55B EQ PUSH2 0x157 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH2 0x26D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP2 SWAP1 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x119 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x2AD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x195 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x46D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH2 0x4DB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x250 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x536 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x33A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x331 SWAP1 PUSH2 0x98F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x37C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x373 SWAP1 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP1 PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x421 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x48A DUP4 PUSH1 0x3 SLOAD PUSH2 0x74A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x4B6 DUP3 PUSH2 0x4A8 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0x75F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x774 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x4CE DUP3 PUSH1 0x4 SLOAD PUSH2 0x789 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLVALUE PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x527 SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x578 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56F SWAP1 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x582 DUP3 PUSH2 0x473 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x5AD PUSH1 0x6 SLOAD PUSH2 0x59F PUSH1 0x64 DUP6 PUSH2 0x75F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x789 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xADD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x629 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x64D SWAP2 SWAP1 PUSH2 0xB47 JUMP JUMPDEST POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AA SWAP3 SWAP2 SWAP1 PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6EA SWAP2 SWAP1 PUSH2 0xB47 JUMP JUMPDEST POP PUSH2 0x6F5 DUP4 DUP4 PUSH2 0x79E JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x77F92A1B6A1A11DE8CA49515AD4C1FAD45632DD3442167D74B90B304A3C7A758 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x73D SWAP3 SWAP2 SWAP1 PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x757 SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x76C SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x781 SWAP2 SWAP1 PUSH2 0xC2E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x796 SWAP2 SWAP1 PUSH2 0xC5E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7B3 DUP3 PUSH1 0x3 SLOAD PUSH2 0x74A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x7CE DUP2 PUSH1 0x4 SLOAD PUSH2 0x789 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x801 DUP3 PUSH2 0x7D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x811 DUP2 PUSH2 0x7F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x82A PUSH0 DUP4 ADD DUP5 PUSH2 0x808 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x842 DUP2 PUSH2 0x830 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x85B PUSH0 DUP4 ADD DUP5 PUSH2 0x839 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x86E DUP2 PUSH2 0x7F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x878 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x889 DUP2 PUSH2 0x865 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8A4 JUMPI PUSH2 0x8A3 PUSH2 0x861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8B1 DUP5 DUP3 DUP6 ADD PUSH2 0x87B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8C3 DUP2 PUSH2 0x830 JUMP JUMPDEST DUP2 EQ PUSH2 0x8CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8DE DUP2 PUSH2 0x8BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F9 JUMPI PUSH2 0x8F8 PUSH2 0x861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x906 DUP5 DUP3 DUP6 ADD PUSH2 0x8D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x979 PUSH1 0x21 DUP4 PUSH2 0x90F JUMP JUMPDEST SWAP2 POP PUSH2 0x984 DUP3 PUSH2 0x91F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9A6 DUP2 PUSH2 0x96D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9E1 PUSH1 0xE DUP4 PUSH2 0x90F JUMP JUMPDEST SWAP2 POP PUSH2 0x9EC DUP3 PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA0E DUP2 PUSH2 0x9D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA49 PUSH1 0x1D DUP4 PUSH2 0x90F JUMP JUMPDEST SWAP2 POP PUSH2 0xA54 DUP3 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA76 DUP2 PUSH2 0xA3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAB4 DUP3 PUSH2 0x830 JUMP JUMPDEST SWAP2 POP PUSH2 0xABF DUP4 PUSH2 0x830 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAD7 JUMPI PUSH2 0xAD6 PUSH2 0xA7D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xAF0 PUSH0 DUP4 ADD DUP7 PUSH2 0x808 JUMP JUMPDEST PUSH2 0xAFD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x808 JUMP JUMPDEST PUSH2 0xB0A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x839 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB26 DUP2 PUSH2 0xB12 JUMP JUMPDEST DUP2 EQ PUSH2 0xB30 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB41 DUP2 PUSH2 0xB1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB5C JUMPI PUSH2 0xB5B PUSH2 0x861 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB69 DUP5 DUP3 DUP6 ADD PUSH2 0xB33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB85 PUSH0 DUP4 ADD DUP6 PUSH2 0x808 JUMP JUMPDEST PUSH2 0xB92 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x839 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBAC PUSH0 DUP4 ADD DUP6 PUSH2 0x839 JUMP JUMPDEST PUSH2 0xBB9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x839 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBCA DUP3 PUSH2 0x830 JUMP JUMPDEST SWAP2 POP PUSH2 0xBD5 DUP4 PUSH2 0x830 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xBE3 DUP2 PUSH2 0x830 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xBFA JUMPI PUSH2 0xBF9 PUSH2 0xA7D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC38 DUP3 PUSH2 0x830 JUMP JUMPDEST SWAP2 POP PUSH2 0xC43 DUP4 PUSH2 0x830 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC53 JUMPI PUSH2 0xC52 PUSH2 0xC01 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC68 DUP3 PUSH2 0x830 JUMP JUMPDEST SWAP2 POP PUSH2 0xC73 DUP4 PUSH2 0x830 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xC8B JUMPI PUSH2 0xC8A PUSH2 0xA7D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0x24 ISZERO 0xB7 0xFB 0xBD 0xD1 0xB7 ADDMOD POP 0xD5 0x24 0xEF PUSH3 0xD1A983 0xE8 DUP7 PUSH24 0x176394B5FFDD5B711696EFC864736F6C6343000816003300 ",
							"sourceMap": "147:2703:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;233:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;321:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;353:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2610:237;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;261:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;206:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;405:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1459:577;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1367:88;;;:::i;:::-;;291:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2044:526;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;233:21;;;;;;;;;;;;;:::o;321:23::-;;;;:::o;353:43::-;;;;;;;;;;;;;;;;;:::o;2610:237::-;784:5;;;;;;;;;;770:19;;:10;:19;;;762:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;2691:1:::1;2682:6;:10;2674:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;2740:21;2730:6;:31;;2722:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2816:5;::::0;::::1;;;;;;;;2808:23;;:31;2832:6;2808:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2610:237:::0;:::o;261:21::-;;;;;;;;;;;;;:::o;206:20::-;;;;;;;;;;;;:::o;405:39::-;;;;:::o;1459:577::-;1533:7;1626:19;1648:28;1661:14;1648:8;;:12;;:28;;;;:::i;:::-;1626:50;;1763:19;1785:39;1812:11;1785:22;1798:8;;1785;;:12;;:22;;;;:::i;:::-;:26;;:39;;;;:::i;:::-;1763:61;;1921:18;1942:25;1955:11;1942:8;;:12;;:25;;;;:::i;:::-;1921:46;;2022:10;2015:17;;;;;1459:577;;;:::o;1367:88::-;1438:9;1414:8;:20;1423:10;1414:20;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;1367:88::o;291:23::-;;;;:::o;2044:526::-;2133:1;2116:14;:18;2108:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;2166:18;2187:35;2207:14;2187:19;:35::i;:::-;2166:56;;2233:22;2258:38;2282:13;;2258:19;2273:3;2258:10;:14;;:19;;;;:::i;:::-;:23;;:38;;;;:::i;:::-;2233:63;;2316:6;;;;;;;;;;;2309:27;;;2337:10;2357:4;2364:14;2309:70;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2397:6;;;;;;;;;;;2390:23;;;2414:10;2426:14;2390:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2454:42;2469:14;2485:10;2454:14;:42::i;:::-;2519:10;2514:48;;;2531:14;2547;2514:48;;;;;;;:::i;:::-;;;;;;;;2097:473;;2044:526;:::o;2755:96:1:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;1146:181:2:-;1245:28;1258:14;1245:8;;:12;;:28;;;;:::i;:::-;1234:8;:39;;;;1295:24;1308:10;1295:8;;:12;;:24;;;;:::i;:::-;1284:8;:35;;;;1146:181;;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1109:117::-;1218:1;1215;1208:12;1355:122;1428:24;1446:5;1428:24;:::i;:::-;1421:5;1418:35;1408:63;;1467:1;1464;1457:12;1408:63;1355:122;:::o;1483:139::-;1529:5;1567:6;1554:20;1545:29;;1583:33;1610:5;1583:33;:::i;:::-;1483:139;;;;:::o;1628:329::-;1687:6;1736:2;1724:9;1715:7;1711:23;1707:32;1704:119;;;1742:79;;:::i;:::-;1704:119;1862:1;1887:53;1932:7;1923:6;1912:9;1908:22;1887:53;:::i;:::-;1877:63;;1833:117;1628:329;;;;:::o;1963:122::-;2036:24;2054:5;2036:24;:::i;:::-;2029:5;2026:35;2016:63;;2075:1;2072;2065:12;2016:63;1963:122;:::o;2091:139::-;2137:5;2175:6;2162:20;2153:29;;2191:33;2218:5;2191:33;:::i;:::-;2091:139;;;;:::o;2236:329::-;2295:6;2344:2;2332:9;2323:7;2319:23;2315:32;2312:119;;;2350:79;;:::i;:::-;2312:119;2470:1;2495:53;2540:7;2531:6;2520:9;2516:22;2495:53;:::i;:::-;2485:63;;2441:117;2236:329;;;;:::o;2571:169::-;2655:11;2689:6;2684:3;2677:19;2729:4;2724:3;2720:14;2705:29;;2571:169;;;;:::o;2746:220::-;2886:34;2882:1;2874:6;2870:14;2863:58;2955:3;2950:2;2942:6;2938:15;2931:28;2746:220;:::o;2972:366::-;3114:3;3135:67;3199:2;3194:3;3135:67;:::i;:::-;3128:74;;3211:93;3300:3;3211:93;:::i;:::-;3329:2;3324:3;3320:12;3313:19;;2972:366;;;:::o;3344:419::-;3510:4;3548:2;3537:9;3533:18;3525:26;;3597:9;3591:4;3587:20;3583:1;3572:9;3568:17;3561:47;3625:131;3751:4;3625:131;:::i;:::-;3617:139;;3344:419;;;:::o;3769:164::-;3909:16;3905:1;3897:6;3893:14;3886:40;3769:164;:::o;3939:366::-;4081:3;4102:67;4166:2;4161:3;4102:67;:::i;:::-;4095:74;;4178:93;4267:3;4178:93;:::i;:::-;4296:2;4291:3;4287:12;4280:19;;3939:366;;;:::o;4311:419::-;4477:4;4515:2;4504:9;4500:18;4492:26;;4564:9;4558:4;4554:20;4550:1;4539:9;4535:17;4528:47;4592:131;4718:4;4592:131;:::i;:::-;4584:139;;4311:419;;;:::o;4736:179::-;4876:31;4872:1;4864:6;4860:14;4853:55;4736:179;:::o;4921:366::-;5063:3;5084:67;5148:2;5143:3;5084:67;:::i;:::-;5077:74;;5160:93;5249:3;5160:93;:::i;:::-;5278:2;5273:3;5269:12;5262:19;;4921:366;;;:::o;5293:419::-;5459:4;5497:2;5486:9;5482:18;5474:26;;5546:9;5540:4;5536:20;5532:1;5521:9;5517:17;5510:47;5574:131;5700:4;5574:131;:::i;:::-;5566:139;;5293:419;;;:::o;5718:180::-;5766:77;5763:1;5756:88;5863:4;5860:1;5853:15;5887:4;5884:1;5877:15;5904:191;5944:3;5963:20;5981:1;5963:20;:::i;:::-;5958:25;;5997:20;6015:1;5997:20;:::i;:::-;5992:25;;6040:1;6037;6033:9;6026:16;;6061:3;6058:1;6055:10;6052:36;;;6068:18;;:::i;:::-;6052:36;5904:191;;;;:::o;6101:442::-;6250:4;6288:2;6277:9;6273:18;6265:26;;6301:71;6369:1;6358:9;6354:17;6345:6;6301:71;:::i;:::-;6382:72;6450:2;6439:9;6435:18;6426:6;6382:72;:::i;:::-;6464;6532:2;6521:9;6517:18;6508:6;6464:72;:::i;:::-;6101:442;;;;;;:::o;6549:90::-;6583:7;6626:5;6619:13;6612:21;6601:32;;6549:90;;;:::o;6645:116::-;6715:21;6730:5;6715:21;:::i;:::-;6708:5;6705:32;6695:60;;6751:1;6748;6741:12;6695:60;6645:116;:::o;6767:137::-;6821:5;6852:6;6846:13;6837:22;;6868:30;6892:5;6868:30;:::i;:::-;6767:137;;;;:::o;6910:345::-;6977:6;7026:2;7014:9;7005:7;7001:23;6997:32;6994:119;;;7032:79;;:::i;:::-;6994:119;7152:1;7177:61;7230:7;7221:6;7210:9;7206:22;7177:61;:::i;:::-;7167:71;;7123:125;6910:345;;;;:::o;7261:332::-;7382:4;7420:2;7409:9;7405:18;7397:26;;7433:71;7501:1;7490:9;7486:17;7477:6;7433:71;:::i;:::-;7514:72;7582:2;7571:9;7567:18;7558:6;7514:72;:::i;:::-;7261:332;;;;;:::o;7599:::-;7720:4;7758:2;7747:9;7743:18;7735:26;;7771:71;7839:1;7828:9;7824:17;7815:6;7771:71;:::i;:::-;7852:72;7920:2;7909:9;7905:18;7896:6;7852:72;:::i;:::-;7599:332;;;;;:::o;7937:410::-;7977:7;8000:20;8018:1;8000:20;:::i;:::-;7995:25;;8034:20;8052:1;8034:20;:::i;:::-;8029:25;;8089:1;8086;8082:9;8111:30;8129:11;8111:30;:::i;:::-;8100:41;;8290:1;8281:7;8277:15;8274:1;8271:22;8251:1;8244:9;8224:83;8201:139;;8320:18;;:::i;:::-;8201:139;7985:362;7937:410;;;;:::o;8353:180::-;8401:77;8398:1;8391:88;8498:4;8495:1;8488:15;8522:4;8519:1;8512:15;8539:185;8579:1;8596:20;8614:1;8596:20;:::i;:::-;8591:25;;8630:20;8648:1;8630:20;:::i;:::-;8625:25;;8669:1;8659:35;;8674:18;;:::i;:::-;8659:35;8716:1;8713;8709:9;8704:14;;8539:185;;;;:::o;8730:194::-;8770:4;8790:20;8808:1;8790:20;:::i;:::-;8785:25;;8824:20;8842:1;8824:20;:::i;:::-;8819:25;;8868:1;8865;8861:9;8853:17;;8892:1;8886:4;8883:11;8880:37;;;8897:18;;:::i;:::-;8880:37;8730:194;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "654200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balances(address)": "2847",
								"calculateSwapAmount(uint256)": "infinite",
								"deposit()": "infinite",
								"feePercentage()": "2447",
								"owner()": "2505",
								"reserveA()": "2513",
								"reserveB()": "2448",
								"swapTokens(uint256)": "infinite",
								"tokenA()": "2509",
								"tokenB()": "2597",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"updateReserves(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 147,
									"end": 2850,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 147,
									"end": 2850,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 147,
									"end": 2850,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 436,
									"end": 444,
									"name": "PUSH",
									"source": 2,
									"value": "1E"
								},
								{
									"begin": 405,
									"end": 444,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 405,
									"end": 444,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 855,
									"end": 992,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 855,
									"end": 992,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 855,
									"end": 992,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 855,
									"end": 992,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 855,
									"end": 992,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 855,
									"end": 992,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 855,
									"end": 992,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 855,
									"end": 992,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 920,
									"end": 930,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 912,
									"end": 917,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 912,
									"end": 917,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 912,
									"end": 930,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 912,
									"end": 930,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 912,
									"end": 930,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 912,
									"end": 930,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 912,
									"end": 930,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 912,
									"end": 930,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 912,
									"end": 930,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 912,
									"end": 930,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 912,
									"end": 930,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 912,
									"end": 930,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 912,
									"end": 930,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 912,
									"end": 930,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 912,
									"end": 930,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 912,
									"end": 930,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 912,
									"end": 930,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 912,
									"end": 930,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 912,
									"end": 930,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 912,
									"end": 930,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 950,
									"end": 957,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 941,
									"end": 947,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 941,
									"end": 947,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 957,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 941,
									"end": 957,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 941,
									"end": 957,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 941,
									"end": 957,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 941,
									"end": 957,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 941,
									"end": 957,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 941,
									"end": 957,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 941,
									"end": 957,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 941,
									"end": 957,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 941,
									"end": 957,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 941,
									"end": 957,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 941,
									"end": 957,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 941,
									"end": 957,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 941,
									"end": 957,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 941,
									"end": 957,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 941,
									"end": 957,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 941,
									"end": 957,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 941,
									"end": 957,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 977,
									"end": 984,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 968,
									"end": 974,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 968,
									"end": 974,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 968,
									"end": 984,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 968,
									"end": 984,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 968,
									"end": 984,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 968,
									"end": 984,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 968,
									"end": 984,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 968,
									"end": 984,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 968,
									"end": 984,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 968,
									"end": 984,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 968,
									"end": 984,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 968,
									"end": 984,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 968,
									"end": 984,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 968,
									"end": 984,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 968,
									"end": 984,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 968,
									"end": 984,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 968,
									"end": 984,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 968,
									"end": 984,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 968,
									"end": 984,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 968,
									"end": 984,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 855,
									"end": 992,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 147,
									"end": 2850,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 147,
									"end": 2850,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 147,
									"end": 2850,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 147,
									"end": 2850,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 147,
									"end": 2850,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 147,
									"end": 2850,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 147,
									"end": 2850,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 147,
									"end": 2850,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 2850,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 147,
									"end": 2850,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 2850,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220352415b7fbbdd1b70850d524ef62d1a983e88677176394b5ffdd5b711696efc864736f6c63430008160033",
									".code": [
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH",
											"source": 2,
											"value": "A001ECDD"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH",
											"source": 2,
											"value": "A393BFD6"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH",
											"source": 2,
											"value": "D0E30DB0"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH",
											"source": 2,
											"value": "DC5FA6C5"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH",
											"source": 2,
											"value": "FE784EAA"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH",
											"source": 2,
											"value": "FC63D10"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH",
											"source": 2,
											"value": "19E36F3B"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH",
											"source": 2,
											"value": "27E235E3"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH",
											"source": 2,
											"value": "2E1A7D4D"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH",
											"source": 2,
											"value": "5F64B55B"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 147,
											"end": 2850,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 233,
											"end": 254,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 233,
											"end": 254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 233,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 233,
											"end": 254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 233,
											"end": 254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 254,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 233,
											"end": 254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 233,
											"end": 254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 233,
											"end": 254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 254,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 321,
											"end": 344,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 321,
											"end": 344,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 344,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 321,
											"end": 344,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 321,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 321,
											"end": 344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 321,
											"end": 344,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 344,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 321,
											"end": 344,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 321,
											"end": 344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 321,
											"end": 344,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 344,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 353,
											"end": 396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 353,
											"end": 396,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 353,
											"end": 396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 353,
											"end": 396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 353,
											"end": 396,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 353,
											"end": 396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 353,
											"end": 396,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 353,
											"end": 396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 353,
											"end": 396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 353,
											"end": 396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 353,
											"end": 396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 353,
											"end": 396,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 353,
											"end": 396,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 353,
											"end": 396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 353,
											"end": 396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 353,
											"end": 396,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2610,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2610,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 261,
											"end": 282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 261,
											"end": 282,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 282,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 261,
											"end": 282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 261,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 261,
											"end": 282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 261,
											"end": 282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 261,
											"end": 282,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 261,
											"end": 282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 261,
											"end": 282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 206,
											"end": 226,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 206,
											"end": 226,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 226,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 206,
											"end": 226,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 206,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 206,
											"end": 226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 206,
											"end": 226,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 206,
											"end": 226,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 206,
											"end": 226,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 206,
											"end": 226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 206,
											"end": 226,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 206,
											"end": 226,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 405,
											"end": 444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 405,
											"end": 444,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 444,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 405,
											"end": 444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 405,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 405,
											"end": 444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 405,
											"end": 444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 444,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 405,
											"end": 444,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 405,
											"end": 444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 405,
											"end": 444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 444,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1459,
											"end": 2036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1459,
											"end": 2036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1459,
											"end": 2036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1455,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1367,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1367,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1367,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1455,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1367,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1455,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 291,
											"end": 314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 291,
											"end": 314,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 314,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 291,
											"end": 314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 291,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 291,
											"end": 314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 291,
											"end": 314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 314,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 291,
											"end": 314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 291,
											"end": 314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 314,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2044,
											"end": 2570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2044,
											"end": 2570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 233,
											"end": 254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 233,
											"end": 254,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 233,
											"end": 254,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 233,
											"end": 254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 321,
											"end": 344,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 321,
											"end": 344,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 321,
											"end": 344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 353,
											"end": 396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 353,
											"end": 396,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 353,
											"end": 396,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 353,
											"end": 396,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 353,
											"end": 396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 353,
											"end": 396,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 353,
											"end": 396,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 353,
											"end": 396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 784,
											"end": 789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 789,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 784,
											"end": 789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 789,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 784,
											"end": 789,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 784,
											"end": 789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 789,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 784,
											"end": 789,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 784,
											"end": 789,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 770,
											"end": 789,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 789,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 770,
											"end": 780,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 770,
											"end": 789,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 789,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 770,
											"end": 789,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 762,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 762,
											"end": 827,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 762,
											"end": 827,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 762,
											"end": 827,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 762,
											"end": 827,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 762,
											"end": 827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 762,
											"end": 827,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 762,
											"end": 827,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 762,
											"end": 827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 762,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 762,
											"end": 827,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 762,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 762,
											"end": 827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 762,
											"end": 827,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 762,
											"end": 827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 762,
											"end": 827,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 762,
											"end": 827,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 762,
											"end": 827,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 762,
											"end": 827,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 762,
											"end": 827,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 762,
											"end": 827,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 762,
											"end": 827,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 762,
											"end": 827,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 762,
											"end": 827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2691,
											"end": 2692,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2688,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2692,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2674,
											"end": 2711,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2711,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2674,
											"end": 2711,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2711,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2674,
											"end": 2711,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2674,
											"end": 2711,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2674,
											"end": 2711,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2711,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2674,
											"end": 2711,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2711,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2711,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2711,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2711,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2711,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2711,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2711,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2674,
											"end": 2711,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2761,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2736,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2761,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2761,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2722,
											"end": 2795,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2722,
											"end": 2795,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2722,
											"end": 2795,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2795,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2722,
											"end": 2795,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2722,
											"end": 2795,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2722,
											"end": 2795,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2795,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2722,
											"end": 2795,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2722,
											"end": 2795,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2795,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2795,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2795,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2795,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2795,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2795,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2722,
											"end": 2795,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2821,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2821,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2821,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2821,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2821,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2816,
											"end": 2821,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2821,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2821,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2821,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2816,
											"end": 2821,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2808,
											"end": 2831,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 2832,
											"end": 2838,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2808,
											"end": 2839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2839,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 261,
											"end": 282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 261,
											"end": 282,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 261,
											"end": 282,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 261,
											"end": 282,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 261,
											"end": 282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 206,
											"end": 226,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 226,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 206,
											"end": 226,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 206,
											"end": 226,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 206,
											"end": 226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 405,
											"end": 444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 405,
											"end": 444,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 405,
											"end": 444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1626,
											"end": 1645,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1661,
											"end": 1675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1656,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1648,
											"end": 1656,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1648,
											"end": 1660,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1676,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1676,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1676,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1648,
											"end": 1676,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1676,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1648,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1626,
											"end": 1676,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1626,
											"end": 1676,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1812,
											"end": 1823,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1798,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1798,
											"end": 1806,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1793,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1785,
											"end": 1793,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1785,
											"end": 1797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1785,
											"end": 1811,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1824,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1824,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1824,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1785,
											"end": 1824,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1824,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1785,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1824,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1939,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1942,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1955,
											"end": 1966,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1950,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1942,
											"end": 1950,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1942,
											"end": 1954,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1967,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1942,
											"end": 1967,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1967,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1942,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1967,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2032,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 2036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1455,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1367,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1422,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1414,
											"end": 1434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1433,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1434,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1414,
											"end": 1434,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1434,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1414,
											"end": 1434,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1434,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1434,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1434,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1434,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1434,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1434,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1434,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1414,
											"end": 1447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1414,
											"end": 1447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1447,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1414,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1447,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1447,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 291,
											"end": 314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2133,
											"end": 2134,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2116,
											"end": 2130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2134,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2108,
											"end": 2153,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2153,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2108,
											"end": 2153,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2153,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2108,
											"end": 2153,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2153,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2153,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2108,
											"end": 2153,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2108,
											"end": 2153,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2108,
											"end": 2153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2153,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2108,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2153,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2108,
											"end": 2153,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2153,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2153,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2153,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2153,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2153,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2153,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2108,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2187,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2187,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2187,
											"end": 2222,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2187,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2222,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2282,
											"end": 2295,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2282,
											"end": 2295,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2273,
											"end": 2276,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2258,
											"end": 2268,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2258,
											"end": 2272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2277,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2277,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2258,
											"end": 2277,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2277,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2258,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2258,
											"end": 2281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2296,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2258,
											"end": 2296,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2296,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2258,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2322,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2316,
											"end": 2322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2322,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2316,
											"end": 2322,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2322,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2316,
											"end": 2322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2309,
											"end": 2336,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 2337,
											"end": 2347,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2357,
											"end": 2361,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2378,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2309,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2309,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2403,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2397,
											"end": 2403,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2403,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2403,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2397,
											"end": 2403,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2403,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2403,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2397,
											"end": 2403,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2413,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2390,
											"end": 2413,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2413,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2414,
											"end": 2424,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2426,
											"end": 2440,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2390,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2390,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2469,
											"end": 2483,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2495,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2454,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2496,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2454,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2519,
											"end": 2529,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2514,
											"end": 2562,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "77F92A1B6A1A11DE8CA49515AD4C1FAD45632DD3442167D74B90B304A3C7A758"
										},
										{
											"begin": 2531,
											"end": 2545,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2547,
											"end": 2561,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2514,
											"end": 2562,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2514,
											"end": 2562,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2514,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2562,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2514,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2514,
											"end": 2562,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2562,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2562,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2044,
											"end": 2570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1327,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1146,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1258,
											"end": 1272,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1253,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1245,
											"end": 1253,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1245,
											"end": 1257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1273,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1245,
											"end": 1273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1273,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1245,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1234,
											"end": 1242,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1234,
											"end": 1273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1234,
											"end": 1273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1234,
											"end": 1273,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1234,
											"end": 1273,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1303,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1295,
											"end": 1303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1295,
											"end": 1307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1295,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1292,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1284,
											"end": 1319,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1319,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1319,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1146,
											"end": 1327,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1146,
											"end": 1327,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1146,
											"end": 1327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 670,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 593,
											"end": 670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 648,
											"end": 664,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 648,
											"end": 664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 593,
											"end": 670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1446,
											"end": 1451,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1428,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1453,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1534,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1554,
											"end": 1574,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1583,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 1734,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1739,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1742,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1921,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1908,
											"end": 1930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1887,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2054,
											"end": 2059,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2036,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2061,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2077,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 2142,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2182,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2218,
											"end": 2223,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2191,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2091,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2346,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2332,
											"end": 2341,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2330,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2319,
											"end": 2342,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2347,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2350,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2540,
											"end": 2547,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2520,
											"end": 2529,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2538,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2495,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2558,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2695,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2684,
											"end": 2687,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2696,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2724,
											"end": 2727,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2720,
											"end": 2734,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2734,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2734,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2571,
											"end": 2740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2966,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2746,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F"
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2874,
											"end": 2880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2870,
											"end": 2884,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2863,
											"end": 2921,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 2958,
											"name": "PUSH",
											"source": 3,
											"value": "6E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2950,
											"end": 2952,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 2948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 2953,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 2959,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2966,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2972,
											"end": 3338,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2972,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3117,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3135,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 3199,
											"end": 3201,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3194,
											"end": 3197,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3135,
											"end": 3202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3202,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 3135,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3128,
											"end": 3202,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3128,
											"end": 3202,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3211,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 3300,
											"end": 3303,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3211,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3211,
											"end": 3304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3211,
											"end": 3304,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 3211,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3331,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3324,
											"end": 3327,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3320,
											"end": 3332,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3313,
											"end": 3332,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3313,
											"end": 3332,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2972,
											"end": 3338,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2972,
											"end": 3338,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2972,
											"end": 3338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2972,
											"end": 3338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3344,
											"end": 3763,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3344,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3514,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 3550,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3537,
											"end": 3546,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3551,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3551,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3525,
											"end": 3551,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3591,
											"end": 3595,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3587,
											"end": 3607,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3584,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3581,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3568,
											"end": 3585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3608,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3625,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 3751,
											"end": 3755,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3625,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3625,
											"end": 3756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3625,
											"end": 3756,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 3625,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3617,
											"end": 3756,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3617,
											"end": 3756,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3344,
											"end": 3763,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3344,
											"end": 3763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3344,
											"end": 3763,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3344,
											"end": 3763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3769,
											"end": 3933,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3769,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3909,
											"end": 3925,
											"name": "PUSH",
											"source": 3,
											"value": "496E76616C696420616D6F756E74000000000000000000000000000000000000"
										},
										{
											"begin": 3905,
											"end": 3906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3897,
											"end": 3903,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3893,
											"end": 3907,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3886,
											"end": 3926,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3769,
											"end": 3933,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3769,
											"end": 3933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3939,
											"end": 4305,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3939,
											"end": 4305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4081,
											"end": 4084,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 4166,
											"end": 4168,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 4161,
											"end": 4164,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4102,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 4102,
											"end": 4169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4102,
											"end": 4169,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 4102,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4169,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4178,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 4267,
											"end": 4270,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4178,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4178,
											"end": 4271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4178,
											"end": 4271,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 4178,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4296,
											"end": 4298,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4291,
											"end": 4294,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4287,
											"end": 4299,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4280,
											"end": 4299,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4280,
											"end": 4299,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3939,
											"end": 4305,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3939,
											"end": 4305,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3939,
											"end": 4305,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3939,
											"end": 4305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4311,
											"end": 4730,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4311,
											"end": 4730,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4481,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4515,
											"end": 4517,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4504,
											"end": 4513,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4492,
											"end": 4518,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4492,
											"end": 4518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4564,
											"end": 4573,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4558,
											"end": 4562,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4574,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4550,
											"end": 4551,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4539,
											"end": 4548,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4535,
											"end": 4552,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4528,
											"end": 4575,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4592,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 4718,
											"end": 4722,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4592,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 4592,
											"end": 4723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4592,
											"end": 4723,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 4592,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4584,
											"end": 4723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4584,
											"end": 4723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4311,
											"end": 4730,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4311,
											"end": 4730,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4311,
											"end": 4730,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4311,
											"end": 4730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4736,
											"end": 4915,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4736,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4876,
											"end": 4907,
											"name": "PUSH",
											"source": 3,
											"value": "496E73756666696369656E7420636F6E74726163742062616C616E6365000000"
										},
										{
											"begin": 4872,
											"end": 4873,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4864,
											"end": 4870,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4874,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 4908,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4736,
											"end": 4915,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4736,
											"end": 4915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4921,
											"end": 5287,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 4921,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5063,
											"end": 5066,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5084,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 3,
											"value": "1D"
										},
										{
											"begin": 5143,
											"end": 5146,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5084,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5084,
											"end": 5151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5084,
											"end": 5151,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 5084,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5077,
											"end": 5151,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5077,
											"end": 5151,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 5249,
											"end": 5252,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 5160,
											"end": 5253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5253,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 5160,
											"end": 5253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5278,
											"end": 5280,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5273,
											"end": 5276,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5269,
											"end": 5281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5262,
											"end": 5281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5262,
											"end": 5281,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4921,
											"end": 5287,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4921,
											"end": 5287,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4921,
											"end": 5287,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4921,
											"end": 5287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5712,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5293,
											"end": 5712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5463,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5497,
											"end": 5499,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5486,
											"end": 5495,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5482,
											"end": 5500,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5474,
											"end": 5500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5474,
											"end": 5500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5540,
											"end": 5544,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5536,
											"end": 5556,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5532,
											"end": 5533,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5521,
											"end": 5530,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5534,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5510,
											"end": 5557,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5574,
											"end": 5705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 5700,
											"end": 5704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5574,
											"end": 5705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 5574,
											"end": 5705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5574,
											"end": 5705,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 5574,
											"end": 5705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5566,
											"end": 5705,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5566,
											"end": 5705,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5712,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5712,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5718,
											"end": 5898,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 5718,
											"end": 5898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5766,
											"end": 5843,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5763,
											"end": 5764,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5756,
											"end": 5844,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5863,
											"end": 5867,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 5860,
											"end": 5861,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5853,
											"end": 5868,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5887,
											"end": 5891,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5884,
											"end": 5885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5877,
											"end": 5892,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5904,
											"end": 6095,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 5904,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5944,
											"end": 5947,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5963,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 5981,
											"end": 5982,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5963,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 5963,
											"end": 5983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5963,
											"end": 5983,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 5963,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5958,
											"end": 5983,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5958,
											"end": 5983,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6015,
											"end": 6016,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 5997,
											"end": 6017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6017,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 5997,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5992,
											"end": 6017,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5992,
											"end": 6017,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6040,
											"end": 6041,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6037,
											"end": 6038,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6033,
											"end": 6042,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6042,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6026,
											"end": 6042,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6061,
											"end": 6064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6058,
											"end": 6059,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6055,
											"end": 6065,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6052,
											"end": 6088,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6052,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 6052,
											"end": 6088,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6068,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 6068,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 6068,
											"end": 6086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6068,
											"end": 6086,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 6068,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6052,
											"end": 6088,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 6052,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5904,
											"end": 6095,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5904,
											"end": 6095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5904,
											"end": 6095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5904,
											"end": 6095,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5904,
											"end": 6095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6101,
											"end": 6543,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 6101,
											"end": 6543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6250,
											"end": 6254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6290,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6277,
											"end": 6286,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6273,
											"end": 6291,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6265,
											"end": 6291,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6265,
											"end": 6291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6301,
											"end": 6372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 6369,
											"end": 6370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6358,
											"end": 6367,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6354,
											"end": 6371,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6345,
											"end": 6351,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6301,
											"end": 6372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 6301,
											"end": 6372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6301,
											"end": 6372,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 6301,
											"end": 6372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6382,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 6450,
											"end": 6452,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6439,
											"end": 6448,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6435,
											"end": 6453,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6432,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6382,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 6382,
											"end": 6454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6382,
											"end": 6454,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 6382,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6464,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 6532,
											"end": 6534,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6521,
											"end": 6530,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6517,
											"end": 6535,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6508,
											"end": 6514,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6464,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 6464,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6464,
											"end": 6536,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 6464,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6101,
											"end": 6543,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6101,
											"end": 6543,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6101,
											"end": 6543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6101,
											"end": 6543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6101,
											"end": 6543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6101,
											"end": 6543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6101,
											"end": 6543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6549,
											"end": 6639,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 6549,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6583,
											"end": 6590,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6626,
											"end": 6631,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6619,
											"end": 6632,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6612,
											"end": 6633,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6601,
											"end": 6633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6601,
											"end": 6633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6549,
											"end": 6639,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6549,
											"end": 6639,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6549,
											"end": 6639,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6549,
											"end": 6639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6761,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 6645,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6715,
											"end": 6736,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6715,
											"end": 6736,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 6715,
											"end": 6736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6715,
											"end": 6736,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 6715,
											"end": 6736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6708,
											"end": 6713,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6705,
											"end": 6737,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6695,
											"end": 6755,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 6695,
											"end": 6755,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6751,
											"end": 6752,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6748,
											"end": 6749,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6741,
											"end": 6753,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6695,
											"end": 6755,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 6695,
											"end": 6755,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6645,
											"end": 6761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6767,
											"end": 6904,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 6767,
											"end": 6904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6821,
											"end": 6826,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6852,
											"end": 6858,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6846,
											"end": 6859,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6837,
											"end": 6859,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6837,
											"end": 6859,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6868,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 6892,
											"end": 6897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6868,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 6868,
											"end": 6898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6868,
											"end": 6898,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 6868,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6767,
											"end": 6904,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6767,
											"end": 6904,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6767,
											"end": 6904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6767,
											"end": 6904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6767,
											"end": 6904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 7255,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 6910,
											"end": 7255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6977,
											"end": 6983,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7026,
											"end": 7028,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7014,
											"end": 7023,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7005,
											"end": 7012,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7001,
											"end": 7024,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6997,
											"end": 7029,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 6994,
											"end": 7113,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6994,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 6994,
											"end": 7113,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7032,
											"end": 7111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 7032,
											"end": 7111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 7032,
											"end": 7111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7032,
											"end": 7111,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 7032,
											"end": 7111,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6994,
											"end": 7113,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 6994,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7152,
											"end": 7153,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7177,
											"end": 7238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 7230,
											"end": 7237,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7221,
											"end": 7227,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7210,
											"end": 7219,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7206,
											"end": 7228,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7177,
											"end": 7238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 7177,
											"end": 7238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7177,
											"end": 7238,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 7177,
											"end": 7238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7167,
											"end": 7238,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7167,
											"end": 7238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7123,
											"end": 7248,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 7255,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 7255,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 7255,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 7255,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 7255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7261,
											"end": 7593,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7261,
											"end": 7593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7386,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7420,
											"end": 7422,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7409,
											"end": 7418,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7405,
											"end": 7423,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7397,
											"end": 7423,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7397,
											"end": 7423,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7433,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 7501,
											"end": 7502,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7490,
											"end": 7499,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7486,
											"end": 7503,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7477,
											"end": 7483,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7433,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 7433,
											"end": 7504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7433,
											"end": 7504,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 7433,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7514,
											"end": 7586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 7582,
											"end": 7584,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7571,
											"end": 7580,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7567,
											"end": 7585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7558,
											"end": 7564,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7514,
											"end": 7586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 7514,
											"end": 7586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7514,
											"end": 7586,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 7514,
											"end": 7586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7261,
											"end": 7593,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7261,
											"end": 7593,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7261,
											"end": 7593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7261,
											"end": 7593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7261,
											"end": 7593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7261,
											"end": 7593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7599,
											"end": 7931,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 7599,
											"end": 7931,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7758,
											"end": 7760,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7747,
											"end": 7756,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7743,
											"end": 7761,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7735,
											"end": 7761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7735,
											"end": 7761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7771,
											"end": 7842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 7839,
											"end": 7840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7828,
											"end": 7837,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7824,
											"end": 7841,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7821,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7771,
											"end": 7842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 7771,
											"end": 7842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7771,
											"end": 7842,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 7771,
											"end": 7842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7852,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 7920,
											"end": 7922,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7909,
											"end": 7918,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7905,
											"end": 7923,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 7902,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7852,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 7852,
											"end": 7924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7852,
											"end": 7924,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 7852,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7599,
											"end": 7931,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7599,
											"end": 7931,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7599,
											"end": 7931,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7599,
											"end": 7931,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7599,
											"end": 7931,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7599,
											"end": 7931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7937,
											"end": 8347,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 7937,
											"end": 8347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7977,
											"end": 7984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8000,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 8018,
											"end": 8019,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8000,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 8000,
											"end": 8020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8000,
											"end": 8020,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 8000,
											"end": 8020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7995,
											"end": 8020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7995,
											"end": 8020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8034,
											"end": 8054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 8052,
											"end": 8053,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8034,
											"end": 8054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 8034,
											"end": 8054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8034,
											"end": 8054,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 8034,
											"end": 8054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8029,
											"end": 8054,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8029,
											"end": 8054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8089,
											"end": 8090,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8086,
											"end": 8087,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8082,
											"end": 8091,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 8111,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 8129,
											"end": 8140,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8111,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 8111,
											"end": 8141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8111,
											"end": 8141,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 8111,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8100,
											"end": 8141,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8100,
											"end": 8141,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8290,
											"end": 8291,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8281,
											"end": 8288,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8277,
											"end": 8292,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 8274,
											"end": 8275,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8271,
											"end": 8293,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 8251,
											"end": 8252,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8244,
											"end": 8253,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8224,
											"end": 8307,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 8201,
											"end": 8340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 8201,
											"end": 8340,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8320,
											"end": 8338,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 8320,
											"end": 8338,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 8320,
											"end": 8338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8320,
											"end": 8338,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 8320,
											"end": 8338,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8201,
											"end": 8340,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 8201,
											"end": 8340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7985,
											"end": 8347,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7937,
											"end": 8347,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7937,
											"end": 8347,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7937,
											"end": 8347,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7937,
											"end": 8347,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7937,
											"end": 8347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8353,
											"end": 8533,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 8353,
											"end": 8533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8401,
											"end": 8478,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8398,
											"end": 8399,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8391,
											"end": 8479,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8498,
											"end": 8502,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 8495,
											"end": 8496,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8488,
											"end": 8503,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8522,
											"end": 8526,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8519,
											"end": 8520,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8512,
											"end": 8527,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8539,
											"end": 8724,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 8539,
											"end": 8724,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8579,
											"end": 8580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8596,
											"end": 8616,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 8614,
											"end": 8615,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8596,
											"end": 8616,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 8596,
											"end": 8616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8596,
											"end": 8616,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 8596,
											"end": 8616,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8591,
											"end": 8616,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8591,
											"end": 8616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8630,
											"end": 8650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 8648,
											"end": 8649,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8630,
											"end": 8650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 8630,
											"end": 8650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8630,
											"end": 8650,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 8630,
											"end": 8650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8625,
											"end": 8650,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8625,
											"end": 8650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8669,
											"end": 8670,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8659,
											"end": 8694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 8659,
											"end": 8694,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8674,
											"end": 8692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 8674,
											"end": 8692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 8674,
											"end": 8692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8674,
											"end": 8692,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 8674,
											"end": 8692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8659,
											"end": 8694,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 8659,
											"end": 8694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8716,
											"end": 8717,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8713,
											"end": 8714,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8709,
											"end": 8718,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 8704,
											"end": 8718,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8704,
											"end": 8718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8539,
											"end": 8724,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8539,
											"end": 8724,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8539,
											"end": 8724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8539,
											"end": 8724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8539,
											"end": 8724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8730,
											"end": 8924,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 8730,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8770,
											"end": 8774,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8790,
											"end": 8810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 8808,
											"end": 8809,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8790,
											"end": 8810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 8790,
											"end": 8810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8790,
											"end": 8810,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 8790,
											"end": 8810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8785,
											"end": 8810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8785,
											"end": 8810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8824,
											"end": 8844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 8842,
											"end": 8843,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8824,
											"end": 8844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 8824,
											"end": 8844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8824,
											"end": 8844,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 8824,
											"end": 8844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8819,
											"end": 8844,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8819,
											"end": 8844,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8868,
											"end": 8869,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8865,
											"end": 8866,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8861,
											"end": 8870,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8853,
											"end": 8870,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8853,
											"end": 8870,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8892,
											"end": 8893,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8886,
											"end": 8890,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8883,
											"end": 8894,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8880,
											"end": 8917,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8880,
											"end": 8917,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 8880,
											"end": 8917,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 8897,
											"end": 8915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8880,
											"end": 8917,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 8880,
											"end": 8917,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8730,
											"end": 8924,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8730,
											"end": 8924,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8730,
											"end": 8924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8730,
											"end": 8924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8730,
											"end": 8924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/main.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balances(address)": "27e235e3",
							"calculateSwapAmount(uint256)": "a393bfd6",
							"deposit()": "d0e30db0",
							"feePercentage()": "a001ecdd",
							"owner()": "8da5cb5b",
							"reserveA()": "dc5fa6c5",
							"reserveB()": "19e36f3b",
							"swapTokens(uint256)": "fe784eaa",
							"tokenA()": "0fc63d10",
							"tokenB()": "5f64b55b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBReceived\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"}],\"name\":\"calculateSwapAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"}],\"name\":\"swapTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/main.sol\":\"SwapDEX\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/main.sol\":{\"keccak256\":\"0xf07dca04c35de34d67e55fa835a949fcfd87d26b532a8d886ed65c9b0631fdb7\",\"urls\":[\"bzz-raw://e659fc660857953d7e8b5237eafb65c7849a2f1831383353ac2862e7c09faf5f\",\"dweb:/ipfs/QmZS1TY9P9oFW7CX4sJKUpST8HTTncZfAihy11DMntQQes\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 398,
								"contract": "contracts/main.sol:SwapDEX",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 400,
								"contract": "contracts/main.sol:SwapDEX",
								"label": "tokenA",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 402,
								"contract": "contracts/main.sol:SwapDEX",
								"label": "tokenB",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 404,
								"contract": "contracts/main.sol:SwapDEX",
								"label": "reserveA",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 406,
								"contract": "contracts/main.sol:SwapDEX",
								"label": "reserveB",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 410,
								"contract": "contracts/main.sol:SwapDEX",
								"label": "balances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 415,
								"contract": "contracts/main.sol:SwapDEX",
								"label": "feePercentage",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/main.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/main.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 110,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															93
														],
														"declarations": [
															{
																"constant": false,
																"id": 93,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 110,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 92,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 97,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 99,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 105,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 91,
															"id": 104,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 107,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 91,
														"id": 109,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 389,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 138,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 125,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 131,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 123,
															"id": 130,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 123,
														"id": 137,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 389,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 180,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 159,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 158,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															161
														],
														"declarations": [
															{
																"constant": false,
																"id": 161,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 180,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 165,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 163,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 166,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 167,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 169,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 175,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 174,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 177,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 151,
														"id": 179,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 389,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 208,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 201,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 193,
															"id": 200,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 203,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 204,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 206,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 193,
														"id": 207,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 389,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 236,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 229,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 221,
															"id": 228,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 231,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 232,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 221,
														"id": 235,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 389,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 251,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 389,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 264,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 266,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 389,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 389,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 296,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 389,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 307,
												"id": 311,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 389,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5054:106:1",
										"statements": [
											{
												"id": 336,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 326,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "5096:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 327,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "5101:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 329,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "5104:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 325,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "5138:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "5142:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 324,
														"id": 335,
														"nodeType": "Return",
														"src": "5131:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4972:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4983:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4994:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5045:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:1"
									},
									"scope": 389,
									"src": "4959:201:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "5739:105:1",
										"statements": [
											{
												"id": 361,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 351,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "5781:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 354,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "5788:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 350,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 356,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "5822:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "5826:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 349,
														"id": 360,
														"nodeType": "Return",
														"src": "5815:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5679:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5730:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:1"
									},
									"scope": 389,
									"src": "5644:200:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6585:105:1",
										"statements": [
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "6627:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 379,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "6634:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 375,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 381,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6668:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "6672:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 374,
														"id": 385,
														"nodeType": "Return",
														"src": "6661:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6503:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6514:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6525:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6576:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:1"
									},
									"scope": 389,
									"src": "6490:200:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 390,
							"src": "482:6210:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:1"
				},
				"id": 1
			},
			"contracts/main.sol": {
				"ast": {
					"absolutePath": "contracts/main.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"SafeMath": [
							389
						],
						"SwapDEX": [
							638
						]
					},
					"id": 639,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 639,
							"sourceUnit": 78,
							"src": "28:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 639,
							"sourceUnit": 390,
							"src": "86:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SwapDEX",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 638,
							"linearizedBaseContracts": [
								638
							],
							"name": "SwapDEX",
							"nameLocation": "156:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 396,
									"libraryName": {
										"id": 394,
										"name": "SafeMath",
										"nameLocations": [
											"177:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 389,
										"src": "177:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "171:27:2",
									"typeName": {
										"id": 395,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "190:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 398,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "221:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 638,
									"src": "206:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 397,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "206:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0fc63d10",
									"id": 400,
									"mutability": "mutable",
									"name": "tokenA",
									"nameLocation": "248:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 638,
									"src": "233:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 399,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "233:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f64b55b",
									"id": 402,
									"mutability": "mutable",
									"name": "tokenB",
									"nameLocation": "276:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 638,
									"src": "261:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 401,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "261:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dc5fa6c5",
									"id": 404,
									"mutability": "mutable",
									"name": "reserveA",
									"nameLocation": "306:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 638,
									"src": "291:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 403,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "291:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "19e36f3b",
									"id": 406,
									"mutability": "mutable",
									"name": "reserveB",
									"nameLocation": "336:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 638,
									"src": "321:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 405,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "321:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "27e235e3",
									"id": 410,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "388:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 638,
									"src": "353:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 409,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 407,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "361:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "353:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 408,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "372:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a001ecdd",
									"id": 415,
									"mutability": "mutable",
									"name": "feePercentage",
									"nameLocation": "420:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 638,
									"src": "405:39:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 411,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "405:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_30_by_1",
											"typeString": "int_const 30"
										},
										"id": 414,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e33",
											"id": 412,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "436:3:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_10",
												"typeString": "rational_const 3 / 10"
											},
											"value": "0.3"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "313030",
											"id": 413,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "441:3:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"src": "436:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30_by_1",
											"typeString": "int_const 30"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "77f92a1b6a1a11de8ca49515ad4c1fad45632dd3442167d74b90b304a3c7a758",
									"id": 423,
									"name": "Swap",
									"nameLocation": "471:4:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "492:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "476:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "476:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "508:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "500:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountBReceived",
												"nameLocation": "532:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "524:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "524:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "475:73:2"
									},
									"src": "465:84:2"
								},
								{
									"anonymous": false,
									"eventSelector": "06239653922ac7bea6aa2b19dc486b9361821d37712eb796adfd38d81de278ca",
									"id": 431,
									"name": "AddLiquidity",
									"nameLocation": "561:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "590:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "574:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "608:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "600:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "600:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "625:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "617:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "573:60:2"
									},
									"src": "555:79:2"
								},
								{
									"anonymous": false,
									"eventSelector": "0fbf06c058b90cb038a618f8c2acbf6145f8b3570fd1fa56abb8f0f3f05b36e8",
									"id": 439,
									"name": "RemoveLiquidity",
									"nameLocation": "646:15:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "678:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "662:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "662:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "696:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "688:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "688:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "713:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "705:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "661:60:2"
									},
									"src": "640:82:2"
								},
								{
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "751:96:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 442,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "770:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "774:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "770:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 444,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "784:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "770:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "791:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																"typeString": "literal_string \"Only owner can call this function\""
															},
															"value": "Only owner can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																"typeString": "literal_string \"Only owner can call this function\""
															}
														],
														"id": 441,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "762:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "762:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "762:65:2"
											},
											{
												"id": 449,
												"nodeType": "PlaceholderStatement",
												"src": "838:1:2"
											}
										]
									},
									"id": 451,
									"name": "onlyOwner",
									"nameLocation": "739:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "748:2:2"
									},
									"src": "730:117:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "901:91:2",
										"statements": [
											{
												"expression": {
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 458,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "912:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 459,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "920:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "924:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "920:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "912:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "912:18:2"
											},
											{
												"expression": {
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 463,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "941:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 464,
														"name": "_tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "950:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "941:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "941:16:2"
											},
											{
												"expression": {
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 467,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "968:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 468,
														"name": "_tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "977:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "968:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "968:16:2"
											}
										]
									},
									"id": 472,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "_tokenA",
												"nameLocation": "875:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "867:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "_tokenB",
												"nameLocation": "892:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "884:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:34:2"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "901:0:2"
									},
									"scope": 638,
									"src": "855:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "1223:104:2",
										"statements": [
											{
												"expression": {
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 479,
														"name": "reserveA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "1234:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 482,
																"name": "amountADesired",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "1258:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 480,
																"name": "reserveA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "1245:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1254:3:2",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 253,
															"src": "1245:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1245:28:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1234:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "1234:39:2"
											},
											{
												"expression": {
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 486,
														"name": "reserveB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "1284:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 489,
																"name": "amountBOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "1308:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 487,
																"name": "reserveB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "1295:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1304:3:2",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 268,
															"src": "1295:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1295:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1284:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "1284:35:2"
											}
										]
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateReserves",
									"nameLocation": "1155:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "1178:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "1170:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1170:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "amountBOut",
												"nameLocation": "1202:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "1194:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1194:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:44:2"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1223:0:2"
									},
									"scope": 638,
									"src": "1146:181:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "1403:52:2",
										"statements": [
											{
												"expression": {
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 497,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "1414:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 500,
														"indexExpression": {
															"expression": {
																"id": 498,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1423:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1427:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1423:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1414:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 501,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1438:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1442:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1414:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "1414:33:2"
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1376:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1383:2:2"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1403:0:2"
									},
									"scope": 638,
									"src": "1367:88:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "1542:494:2",
										"statements": [
											{
												"assignments": [
													514
												],
												"declarations": [
													{
														"constant": false,
														"id": 514,
														"mutability": "mutable",
														"name": "newReserveA",
														"nameLocation": "1634:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 539,
														"src": "1626:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 513,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1626:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 519,
												"initialValue": {
													"arguments": [
														{
															"id": 517,
															"name": "amountADesired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "1661:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 515,
															"name": "reserveA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "1648:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1657:3:2",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 253,
														"src": "1648:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1648:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1626:50:2"
											},
											{
												"assignments": [
													521
												],
												"declarations": [
													{
														"constant": false,
														"id": 521,
														"mutability": "mutable",
														"name": "newReserveB",
														"nameLocation": "1771:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 539,
														"src": "1763:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 520,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1763:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 529,
												"initialValue": {
													"arguments": [
														{
															"id": 527,
															"name": "newReserveA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "1812:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 524,
																	"name": "reserveB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "1798:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 522,
																	"name": "reserveA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "1785:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1794:3:2",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 283,
																"src": "1785:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1785:22:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1808:3:2",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "1785:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1785:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1763:61:2"
											},
											{
												"assignments": [
													531
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "amountBOut",
														"nameLocation": "1929:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 539,
														"src": "1921:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 530,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1921:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 536,
												"initialValue": {
													"arguments": [
														{
															"id": 534,
															"name": "newReserveB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "1955:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 532,
															"name": "reserveB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "1942:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1951:3:2",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "1942:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1942:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1921:46:2"
											},
											{
												"expression": {
													"id": 537,
													"name": "amountBOut",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 531,
													"src": "2022:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 512,
												"id": 538,
												"nodeType": "Return",
												"src": "2015:17:2"
											}
										]
									},
									"functionSelector": "a393bfd6",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateSwapAmount",
									"nameLocation": "1468:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "1496:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "1488:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1487:24:2"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "1533:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1533:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1532:9:2"
									},
									"scope": 638,
									"src": "1459:577:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "2097:473:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "amountADesired",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 542,
																"src": "2116:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2133:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2116:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2136:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 545,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2108:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2108:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "2108:45:2"
											},
											{
												"assignments": [
													553
												],
												"declarations": [
													{
														"constant": false,
														"id": 553,
														"mutability": "mutable",
														"name": "amountBOut",
														"nameLocation": "2174:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 602,
														"src": "2166:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 552,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2166:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"arguments": [
														{
															"id": 555,
															"name": "amountADesired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "2207:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 554,
														"name": "calculateSwapAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "2187:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2187:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2166:56:2"
											},
											{
												"assignments": [
													559
												],
												"declarations": [
													{
														"constant": false,
														"id": 559,
														"mutability": "mutable",
														"name": "amountBWithFee",
														"nameLocation": "2241:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 602,
														"src": "2233:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 558,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2233:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 567,
												"initialValue": {
													"arguments": [
														{
															"id": 565,
															"name": "feePercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "2282:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "313030",
																	"id": 562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2273:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	}
																],
																"expression": {
																	"id": 560,
																	"name": "amountBOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "2258:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2269:3:2",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 283,
																"src": "2258:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2258:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2278:3:2",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "2258:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2258:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2233:63:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 572,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2337:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2341:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2337:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 576,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2357:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapDEX_$638",
																		"typeString": "contract SwapDEX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapDEX_$638",
																		"typeString": "contract SwapDEX"
																	}
																],
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2349:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 574,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2349:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2349:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 578,
															"name": "amountADesired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "2364:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 569,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "2316:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 568,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2309:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2309:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2324:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "2309:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2309:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "2309:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 585,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2414:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2418:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2414:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 587,
															"name": "amountBWithFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "2426:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 582,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "2397:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 581,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2390:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2390:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2405:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "2390:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2390:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "2390:51:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 591,
															"name": "amountADesired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "2469:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 592,
															"name": "amountBOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "2485:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 590,
														"name": "updateReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "2454:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2454:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "2454:42:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 596,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2519:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2523:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2519:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 598,
															"name": "amountADesired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "2531:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 599,
															"name": "amountBWithFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "2547:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 595,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2514:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2514:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "EmitStatement",
												"src": "2509:53:2"
											}
										]
									},
									"functionSelector": "fe784eaa",
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokens",
									"nameLocation": "2053:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "2072:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "2064:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2064:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2063:24:2"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2097:0:2"
									},
									"scope": 638,
									"src": "2044:526:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "2663:184:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 611,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 605,
																"src": "2682:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2691:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2682:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2694:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2674:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2674:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "2674:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 618,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 605,
																"src": "2730:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 621,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2748:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SwapDEX_$638",
																				"typeString": "contract SwapDEX"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SwapDEX_$638",
																				"typeString": "contract SwapDEX"
																			}
																		],
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2740:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 619,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2740:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2740:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2754:7:2",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2740:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2730:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2763:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																"typeString": "literal_string \"Insufficient contract balance\""
															},
															"value": "Insufficient contract balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																"typeString": "literal_string \"Insufficient contract balance\""
															}
														],
														"id": 617,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2722:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2722:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "2722:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 633,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "2832:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 630,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "2816:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2808:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 628,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2808:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2808:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2823:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2808:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2808:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "2808:31:2"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 608,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 607,
												"name": "onlyOwner",
												"nameLocations": [
													"2653:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 451,
												"src": "2653:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2653:9:2"
										}
									],
									"name": "withdraw",
									"nameLocation": "2619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2636:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "2628:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2628:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2627:16:2"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2663:0:2"
									},
									"scope": 638,
									"src": "2610:237:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 639,
							"src": "147:2703:2",
							"usedErrors": [],
							"usedEvents": [
								423,
								431,
								439
							]
						}
					],
					"src": "0:2850:2"
				},
				"id": 2
			}
		}
	}
}